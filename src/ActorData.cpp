#include "ActorData.h"

#include "Init.h"

#include <string>
#include <vector>
#include <math.h>

#include "CmnTypes.h"
#include "Converters.h"
#include "Item.h"

using namespace std;

void ActorDataT::reset()
{
    id = ActorId::END;
    nameA = "";
    nameThe = "";
    corpseNameA = "";
    corpseNameThe = "";
    tile = TileId::empty;
    glyph = 'X';
    color = clrYellow;
    groupSize = MonGroupSize::alone;
    hp = dmgMelee = dmgRanged = 1;
    spi = 12;
    speed = ActorSpeed::normal;
    for (int i = 0; i < int(PropId::END); ++i) {intrProps[i] = false;}
    rangedCooldownTurns = spellCooldownTurns = 0;
    abilityVals.reset();
    for (int i = 0; i < int(AiId::END); ++i) {ai[i] = false;}
    ai[int(AiId::movesToRandomWhenUnaware)] = true;
    nrTurnsAware = 0;
    spawnMinDLVL = 999;
    spawnMaxDLVL = DLVL_LAST - 2;
    actorSize = ActorSize::humanoid;
    isHumanoid = false;
    isAutoDescrAllowed = true;
    deathMsgOverride = "";
    nrKills = 0;
    canOpenDoors = canBashDoors = false;
    canSeeInDarkness = false;
    preventKnockback = false;
    nrLeftAllowedToSpawn = -1;
    isUnique = false;
    isAutoSpawnAllowed = true;
    spellCastMsg = "[SPELL MESSAGE HERE]";
    erraticMovePct = ActorErraticFreq::rare;
    monShockLvl = MonShockLvl::none;
    isRat = isCanine = isSpider = isUndead = isGhost = false;
    canBeSummoned = false;
    canBleed = true;
    canLeaveCorpse = true;
    nativeRooms.clear();
    descr = "";
    aggroTextMonSeen = "";
    aggroTextMonHidden = "";
    aggroSfxMonSeen = SfxId::END;
    aggroSfxMonHidden = SfxId::END;
}

namespace ActorData
{

ActorDataT data[int(ActorId::END)];

namespace
{

void initDataList()
{
    ActorDataT d;
    d.reset();

    d.nameA = "Player";
    d.nameThe = "Player";
    d.id = ActorId::player;
    d.hp = PLAYER_START_HP;
    d.spi = PLAYER_START_SPI;
    d.speed = ActorSpeed::normal;
    d.glyph = '@';
    d.color = clrWhiteHigh;
    d.tile = TileId::playerFirearm;
    d.isAutoSpawnAllowed = false;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Reanimated Corpse";
    d.nameThe = "The Reanimated Corpse";
    d.corpseNameA = "A lifeless gruesome corpse";
    d.corpseNameThe = "The lifeless gruesome corpse";
    d.id = ActorId::zombie;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.glyph = 'Z';
    d.color = clrBrown;
    d.tile = TileId::zombieUnarmed;
    d.hp = 10;
    d.dmgMelee = 4;
    d.abilityVals.setVal(AbilityId::melee, 25);
    d.spawnMinDLVL = 1;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.groupSize = MonGroupSize::group;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canBashDoors = true;
    d.canSeeInDarkness = true;
    d.nrTurnsAware = 12;
    d.descr = "This rotting thing appears to have been brought back to life "
              "through some abominable process. It has grown sharp claws to "
              "attack with.";
    d.aggroTextMonSeen = d.nameThe + " growls at me.";
    d.aggroTextMonHidden = "I hear a growling voice.";
    d.aggroSfxMonSeen = SfxId::zombieGrowl;
    d.aggroSfxMonHidden = SfxId::zombieGrowl;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::scary;
    d.isUndead = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Reanimated Corpse";
    d.nameThe = "The Reanimated Corpse";
    d.corpseNameA = "A lifeless gruesome corpse";
    d.corpseNameThe = "The lifeless gruesome corpse";
    d.id = ActorId::zombieAxe;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.glyph = 'Z';
    d.color = clrGray;
    d.tile = TileId::zombieArmed;
    d.hp = 10;
    d.dmgMelee = 8;
    d.abilityVals.setVal(AbilityId::melee, 35);
    d.abilityVals.setVal(AbilityId::ranged, 0);
    d.spawnMinDLVL = 2;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.groupSize = MonGroupSize::group;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canBashDoors = true;
    d.canSeeInDarkness = true;
    d.nrTurnsAware = 10;
    d.descr = "This rotting thing appears to have been brought back to life "
              "through some abominable process. It is wielding a rusty axe.";
    d.aggroTextMonSeen = d.nameThe + " growls at me.";
    d.aggroTextMonHidden = "I hear a growling voice.";
    d.aggroSfxMonSeen = SfxId::zombieGrowl;
    d.aggroSfxMonHidden = SfxId::zombieGrowl;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::scary;
    d.isUndead = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Bloated Corpse";
    d.nameThe = "The Bloated Corpse";
    d.corpseNameA = "A very large lifeless gruesome corpse";
    d.corpseNameThe = "The very large lifeless gruesome corpse";
    d.id = ActorId::bloatedZombie;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 20;
    d.glyph = 'Z';
    d.color = clrWhiteHigh;
    d.tile = TileId::zombieBloated;
    d.hp = 14;
    d.dmgMelee = 4;
    d.dmgRanged = 3;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 50);
    d.spawnMinDLVL = 3;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canBashDoors = true;
    d.canSeeInDarkness = true;
    d.nrTurnsAware = 50;
    d.descr = "This lumbering giant corpse seems to be artificially bloated "
              "somehow. It is constantly oozing putrid liquid that it can spit "
              "to attack with.";
    d.aggroTextMonHidden = "I hear heavy footsteps.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::scary;
    d.isUndead = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Major Clapham-Lee";
    d.nameThe = "Major Clapham-Lee";
    d.corpseNameA = "The corpse of Major Clapham-Lee";
    d.corpseNameThe = d.corpseNameA;
    d.id = ActorId::majorClaphamLee;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.glyph = 'Z';
    d.color = clrCyanLgt;
    d.tile = TileId::zombieUnarmed;
    d.hp = 24;
    d.dmgMelee = 2;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 40);
    d.spawnMinDLVL = 4;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canBashDoors = true;
    d.canSeeInDarkness = true;
    d.nrTurnsAware = 999;
    d.descr = "Major Sir Eric Moreland Clapham-Lee was once a commanding officer "
              "during the Great War. Shortly after his plane was shot down, his "
              "body was stolen. Now he roams these halls as a resurrected "
              "warrior in service of the cult, commanding a squad of undead.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::terrifying;
    d.isUndead = true;
    d.isUnique = true;
    d.nrLeftAllowedToSpawn = 1;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Dean Halsey";
    d.nameThe = "Dean Halsey";
    d.corpseNameA = "The corpse of Dean Halsey";
    d.corpseNameThe = d.corpseNameA;
    d.id = ActorId::deanHalsey;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.glyph = 'Z';
    d.color = clrCyan;
    d.tile = TileId::zombieUnarmed;
    d.hp = 24;
    d.dmgMelee = 2;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 40);
    d.isAutoSpawnAllowed = false;
    d.spawnMinDLVL = 4;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canBashDoors = true;
    d.canSeeInDarkness = true;
    d.nrTurnsAware = 999;
    d.descr = "Alan Halsey was the dean of the Miskatonic University in New "
              "England. He must have gotten into the hands of the Cult, who "
              "turned him into the hellish zombie warrior I now see before me.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::terrifying;
    d.isUndead = true;
    d.isUnique = true;
    d.nrLeftAllowedToSpawn = 0;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Cultist";
    d.nameThe = "The Cultist";
    d.corpseNameA = "A Cultist corpse";
    d.corpseNameThe = "The Cultist corpse";
    d.id = ActorId::cultist;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 3;
    d.spellCooldownTurns = 4;
    d.glyph = 'P';
    d.color = clrGray;
    d.tile = TileId::cultistFirearm;
    d.hp = 4;
    d.spi = 12;
    d.abilityVals.setVal(AbilityId::melee, 35);
    d.abilityVals.setVal(AbilityId::ranged, 50);
    d.spawnMinDLVL = 1;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canOpenDoors = true;
    d.canBashDoors = true;
    d.nrTurnsAware = 25;
    d.descr = "A fanatic cultist, madly gibbering in some half-lost language.";
    d.spellCastMsg = "The acolyte makes strange gestures in the air.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::human);
    d.nativeRooms.push_back(RoomType::ritual);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Cultist";
    d.nameThe = "The Cultist";
    d.corpseNameA = "A Cultist corpse";
    d.corpseNameThe = "The Cultist corpse";
    d.id = ActorId::cultistElectric;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 3;
    d.spellCooldownTurns = 4;
    d.glyph = 'P';
    d.color = clrYellow;
    d.tile = TileId::cultistFirearm;
    d.hp = 8;
    d.spi = 12;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 55);
    d.spawnMinDLVL = DLVL_FIRST_LATE_GAME;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canOpenDoors = true;
    d.canBashDoors = true;
    d.nrTurnsAware = 25;
    d.descr = "A fanatic cultist, madly gibbering in some half-lost language. It is "
              "wielding an Electric Gun, presumably a gift from the Mi-go.";
    d.spellCastMsg = "The acolyte makes strange gestures in the air.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::human);
    d.nativeRooms.push_back(RoomType::ritual);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Cultist";
    d.nameThe = "The Cultist";
    d.corpseNameA = "A Cultist corpse";
    d.corpseNameThe = "The Cultist corpse";
    d.id = ActorId::cultistSpikeGun;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 3;
    d.spellCooldownTurns = 4;
    d.glyph = 'P';
    d.color = clrBlueLgt;
    d.tile = TileId::cultistFirearm;
    d.hp = 6;
    d.spi = 12;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 40);
    d.spawnMinDLVL = 4;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canOpenDoors = true;
    d.canBashDoors = true;
    d.nrTurnsAware = 25;
    d.descr = "A fanatic cultist, madly gibbering in some half-lost language. It is "
              "wielding a Spike gun.";
    d.spellCastMsg = "The acolyte makes strange gestures in the air.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::human);
    d.nativeRooms.push_back(RoomType::ritual);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Keziah Mason";
    d.nameThe = "Keziah Mason";
    d.corpseNameA = "The corpse of Keziah Mason";
    d.corpseNameThe = d.corpseNameA;
    d.id = ActorId::keziahMason;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.spellCooldownTurns = 2;
    d.glyph = 'P';
    d.color = clrMagenta;
    d.tile = TileId::witchOrWarlock;
    d.hp = 10;
    d.spi = 60;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 40);
    d.nrLeftAllowedToSpawn = 1;
    d.isUnique = true;
    d.canSeeInDarkness = true;
    d.spawnMinDLVL = 3;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.descr = "During the Salem witch trials of 1692 an old woman by the name of "
              "Keziah Mason was arrested for her suspicious behavior and seeming "
              "insight into other worlds. In her testimony to the judge, she "
              "confessed to having signed her name in the Black Book of "
              "Azathoth, and of her secret name of Nahab. She later disappeared "
              "mysteriously from Salem. She is described as having a \"bent "
              "back, long nose, and shrivelled chin\" and has a \"croaking "
              "voice\". She has an animal familiar; the rat Brown Jenkin, which "
              "she trusts to carry messages between her and the devil. She feeds "
              "this creature on her blood.";
    d.spellCastMsg = "Keziah makes strange gestures in the air.";
    d.aggroTextMonSeen = d.nameThe + " chortles at me in a croaking voice.";
    d.aggroTextMonHidden = "I hear a repulsive croaking voice.";
    d.nrTurnsAware = 999;
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::ritual);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Brown Jenkin";
    d.nameThe = "Brown Jenkin";
    d.corpseNameA = "The corpse of Brown Jenkin";
    d.corpseNameThe = d.corpseNameA;
    d.id = ActorId::brownJenkin;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.glyph = 'r';
    d.color = clrMagenta;
    d.tile = TileId::ratThing;
    d.hp = 10;
    d.spi = 25;
    d.dmgMelee = 5;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.abilityVals.setVal(AbilityId::stealth, 90);
    d.isAutoSpawnAllowed = false;
    d.nrLeftAllowedToSpawn = 0;
    d.isUnique = true;
    d.canSeeInDarkness = true;
    d.spawnMinDLVL = data[int(ActorId::keziahMason)].spawnMinDLVL;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::floor;
    d.descr = "\"That object - no larger than a good sized rat and quaintly "
              "called by the townspeople, \"Brown Jenkin\" - seemed to have been "
              "the fruit of a remarkable case of sympathetic herd-delusion, for "
              "in 1692, no less than eleven persons had persons had testified to "
              "glimpsing it. There were recent rumors, too, with a baffling and "
              "disconcerting amount of agreement. Witnesses said it had long "
              "hair and the shape of a rat, but that its sharp-toothed, bearded "
              "face was evilly human while its paws were like tiny human hands. "
              "It took messages betwixt old Keziah and the devil, and was nursed "
              "on the witch's blood, which it sucked like a vampire. Its voice "
              "was a kind of loathsome titter, and could speak all languages.\" "
              "H.P.Lovecraft -\"Dreams in the witch house\".";
    d.spellCastMsg = "";
    d.aggroTextMonSeen = d.nameThe + " titters at me in a loathsome voice.";
    d.aggroTextMonHidden = "I hear a loathsome titter.";
    d.nrTurnsAware = 999;
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::scary;
    d.isRat = true;
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Elder Hierophant";
    d.nameThe = "The " + d.nameA;
    d.corpseNameA = "The corpse of The Elder Hierophant";
    d.corpseNameThe = d.corpseNameA;
    d.id = ActorId::lengElder;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = false;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.spellCooldownTurns = 1;
    d.glyph = 'P';
    d.color = clrYellow;
    d.tile = TileId::lengElder;
    d.hp = 200;
    d.spi = 200;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 40);
    d.isAutoSpawnAllowed = false;
    d.isUnique = true;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.descr = "[DESCRIPTION MISSING]";
    d.spellCastMsg = d.nameThe + " makes strange gestures in the air.";
    d.aggroTextMonSeen = "";
    d.aggroTextMonHidden = "";
    d.nrTurnsAware = 999;
    d.erraticMovePct = ActorErraticFreq::never;
    d.monShockLvl = MonShockLvl::mindShattering;
    data[size_t(d.id)] = d;
    d.reset();

//  d.nameA = "The Lord of Pestilence";
//  d.nameThe = "The Lord of Pestilence";
//  d.id = ActorId::lordOfPestilence;

//  d.nameA = "The Lord of Shadows";
//  d.nameThe = "The Lord of Shadows";
//  d.id = ActorId::lordOfShadows;

//  d.nameA = "The Lord of Spiders";
//  d.nameThe = "The Lord of Spiders";
//  d.id = ActorId::lordOfSpiders;

//  d.nameA = "The Lord of Spirits";
//  d.nameThe = "The Lord of Spirits";
//  d.id = ActorId::lordOfSpirits;

    d.nameA = "A Cultist Priest";
    d.nameThe = "The Cultist Priest";
    d.corpseNameA = "A Cultist Priest corpse";
    d.corpseNameThe = "The Cultist Priest corpse";
    d.id = ActorId::cultistPriest;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.spellCooldownTurns = 2;
    d.glyph = 'P';
    d.color = clrCyanLgt;
    d.tile = TileId::cultistDagger;
    d.hp = 6;
    d.spi = 30;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.spawnMinDLVL = 5;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canOpenDoors = true;
    d.canBashDoors = true;
    d.nrTurnsAware = 25;
    d.descr = "A fanatic cultist of the priest rank, madly gibbering in some "
              "half-lost language.";
    d.spellCastMsg = "The priest makes strange gestures in the air.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::human);
    d.nativeRooms.push_back(RoomType::ritual);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Green Spider";
    d.nameThe = "The Green Spider";
    d.corpseNameA = "A Green Spider corpse";
    d.corpseNameThe = "The Green Spider corpse";
    d.id = ActorId::greenSpider;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 's';
    d.color = clrGreenLgt;
    d.tile = TileId::spider;
    d.hp = 2;
    d.dmgMelee = 1;
    d.abilityVals.setVal(AbilityId::melee, 15);
    d.spawnMinDLVL = 1;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::group;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 5;
    d.descr = "A large green spider.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.isSpider = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::spider);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A White Spider";
    d.nameThe = "The White Spider";
    d.corpseNameA = "A White Spider corpse";
    d.corpseNameThe = "The White Spider corpse";
    d.id = ActorId::whiteSpider;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 's';
    d.color = clrWhiteHigh;
    d.tile = TileId::spider;
    d.hp = 2;
    d.dmgMelee = 1;
    d.abilityVals.setVal(AbilityId::melee, 15);
    d.spawnMinDLVL = 2;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::group;
    d.nrTurnsAware = 5;
    d.actorSize = ActorSize::floor;
    d.descr = "A large white spider.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.isSpider = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::spider);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Red Spider";
    d.nameThe = "The Red Spider";
    d.corpseNameA = "A Red Spider corpse";
    d.corpseNameThe = "The Red Spider corpse";
    d.id = ActorId::redSpider;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 's';
    d.color = clrRedLgt;
    d.tile = TileId::spider;
    d.hp = 3;
    d.dmgMelee = 2;
    d.abilityVals.setVal(AbilityId::melee, 25);
    d.spawnMinDLVL = 2;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::group;
    d.nrTurnsAware = 5;
    d.actorSize = ActorSize::floor;
    d.descr = "A large red spider.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.isSpider = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::spider);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Shadow Spider";
    d.nameThe = "The Shadow Spider";
    d.id = ActorId::shadowSpider;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 's';
    d.color = clrGray;
    d.tile = TileId::spiderLeng;
    d.hp = 8;
    d.dmgMelee = 3;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::stealth, 90);
    d.intrProps[int(PropId::lgtSens)] = true;
    d.spawnMinDLVL = 6;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::group;
    d.nrTurnsAware = 5;
    d.actorSize = ActorSize::humanoid;
    d.isSpider = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.descr = "A faint shadow of a huge spider, lurking in my periphery.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::spider);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Leng Spider";
    d.nameThe = "The Leng Spider";
    d.corpseNameA = "A Leng Spider corpse";
    d.corpseNameThe = "The Leng Spider corpse";
    d.id = ActorId::lengSpider;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 0;
    d.glyph = 'S';
    d.color = clrMagenta;
    d.tile = TileId::spiderLeng;
    d.hp = 30;
    d.dmgMelee = 8;
//  d.dmgRanged = 1;
    d.abilityVals.setVal(AbilityId::melee, 40);
//  d.abilityVals.setVal(AbilityId::ranged, 40);
    d.spawnMinDLVL = 10;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::few;
    d.nrTurnsAware = 20;
    d.actorSize = ActorSize::giant;
    d.descr = "Leng spiders are huge, purplish arachnids, with pustulent bloated "
              "bodies and long, bristly legs. Native to the Dreamlands, the "
              "spiders of Leng are intelligent, dangerous, and gigantic.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.isSpider = true;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::spider);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Fire hound";
    d.nameThe = "The Fire hound";
    d.corpseNameA = "A Fire Hound corpse";
    d.corpseNameThe = "The Fire Hound corpse";
    d.id = ActorId::fireHound;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 6;
    d.glyph = 'd';
    d.color = clrRed;
    d.tile = TileId::hound;
    d.hp = 13;
    d.dmgMelee = 4;
    d.dmgRanged = 4;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 65);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 35);
    d.intrProps[int(PropId::rFire)] = true;
    d.spawnMinDLVL = 9;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::floor;
    d.canBashDoors = true;
    d.nrTurnsAware = 25;
    d.descr = "This extremely aggressive canine seems to be part corporeal and "
              "part fire. It breathes searing flames.";
    d.aggroTextMonSeen = d.nameThe + " snarls at me.";
    d.aggroTextMonHidden = "I hear a snarl.";
    d.aggroSfxMonSeen = SfxId::dogSnarl;
    d.aggroSfxMonHidden = SfxId::dogSnarl;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::scary;
    d.isCanine = true;
    d.canBeSummoned = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Frost hound";
    d.nameThe = "The Frost hound";
    d.corpseNameA = "A Frost Hound corpse";
    d.corpseNameThe = "The Frost Hound corpse";
    d.id = ActorId::frostHound;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 6;
    d.glyph = 'd';
    d.color = clrBlueLgt;
    d.tile = TileId::hound;
    d.hp = 16;
    d.dmgMelee = 6;
    d.dmgRanged = 6;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 65);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 35);
    d.intrProps[int(PropId::rCold)] = true;
    d.spawnMinDLVL = 9;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::floor;
    d.canBashDoors = true;
    d.nrTurnsAware = 25;
    d.descr = "This extremely aggressive canine seems to be part corporeal and "
              "part living ice. It breathes frost.";
    d.aggroTextMonSeen = d.nameThe + " snarls at me.";
    d.aggroTextMonHidden = "I hear a snarl.";
    d.aggroSfxMonSeen = SfxId::dogSnarl;
    d.aggroSfxMonHidden = SfxId::dogSnarl;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::scary;
    d.isCanine = true;
    d.canBeSummoned = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Zuul the Gatekeeper";
    d.nameThe = "Zuul the Gatekeeper";
    d.corpseNameA = "The corpse of Zuul the Gatekeeper";
    d.corpseNameThe = d.corpseNameA;
    d.id = ActorId::zuul;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.glyph = 'D';
    d.color = clrMagenta;
    d.tile = TileId::hound;
    d.canLeaveCorpse = false;
    d.isAutoDescrAllowed = false;
    d.hp = 65;
    d.spi = 40;
    d.dmgMelee = 8;
    d.abilityVals.setVal(AbilityId::melee, 60);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 25);
    d.intrProps[int(PropId::rFear)] = true;
    d.spawnMinDLVL = 13;
    d.spawnMaxDLVL = 999;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.nrTurnsAware = 50;
    d.descr = "Zuul the Gatekeeper of Gozer is a demigod and minion of Gozer. It "
              "was worshiped by the Sumerians and Hittites in 6000 BC, along "
              "with Gozer.";
    d.deathMsgOverride = "Zuul vanishes...";
    d.aggroTextMonSeen = d.nameThe + " snarls at me.";
    d.aggroTextMonHidden = "I hear a snarl.";
    d.aggroSfxMonSeen = SfxId::dogSnarl;
    d.aggroSfxMonHidden = SfxId::dogSnarl;
    d.erraticMovePct = ActorErraticFreq::never;
    d.monShockLvl = MonShockLvl::mindShattering;
    d.isCanine = true;
    d.canBeSummoned = false;
    d.isUnique = true;
    d.nrLeftAllowedToSpawn = 1;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::human);
    d.nativeRooms.push_back(RoomType::ritual);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Ghost";
    d.nameThe = "The Ghost";
    d.id = ActorId::ghost;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 'G';
    d.color = clrWhiteHigh;
    d.tile = TileId::ghost;
    d.hp = 4;
    d.spi = 12;
    d.dmgMelee = 2;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.intrProps[int(PropId::ethereal)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.spawnMinDLVL = 3;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 5;
    d.descr = "A restless spirit.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::terrifying;
    d.isUndead = true;
    d.isGhost = true;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.deathMsgOverride = "The Ghost is put to rest.";
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Phantasm";
    d.nameThe = "The Phantasm";
    d.id = ActorId::phantasm;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 0;
    d.glyph = 'G';
    d.color = clrGrayDrk;
    d.tile = TileId::phantasm;
    d.hp = 9;
    d.spi = 12;
    d.dmgMelee = 2;
    d.abilityVals.setVal(AbilityId::melee, 45);
    d.intrProps[int(PropId::ethereal)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.spawnMinDLVL = 7;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 7;
    d.descr = "It exists between the land of the dead and the living. It "
              "resembles a grim reaper, including the cloak, scythe, and "
              "skeletal appearance.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::terrifying;
    d.isUndead = true;
    d.isGhost = true;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.deathMsgOverride = "The Phantasm is put to rest.";
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Wraith";
    d.nameThe = "The Wraith";
    d.id = ActorId::wraith;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 0;
    d.spellCooldownTurns = 4;
    d.glyph = 'G';
    d.color = clrRed;
    d.tile = TileId::wraith;
    d.hp = 15;
    d.spi = 20;
    d.dmgMelee = 2;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.intrProps[int(PropId::ethereal)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.spawnMinDLVL = 12;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::alone;
    d.spellCastMsg = "The Wraith casts a spell.";
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 5;
    d.descr = "A powerful spirit.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::terrifying;
    d.isUndead = true;
    d.isGhost = true;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.deathMsgOverride = "The Wraith is put to rest.";
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Rat";
    d.nameThe = "The Rat";
    d.corpseNameA = "A Rat corpse";
    d.corpseNameThe = "The Rat corpse";
    d.id = ActorId::rat;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::sluggish;
    d.rangedCooldownTurns = 0;
    d.glyph = 'r';
    d.color = clrGray;
    d.tile = TileId::rat;
    d.hp = 2;
    d.spi = 1;
    d.dmgMelee = 1;
    d.abilityVals.setVal(AbilityId::melee, 15);
    d.spawnMinDLVL = 1;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::horde;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 5;
    d.descr = "A large and aggressive rodent.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.isRat = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::human);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Rat-thing";
    d.nameThe = "The Rat-thing";
    d.corpseNameA = "A Rat-thing corpse";
    d.corpseNameThe = "The Rat-thing corpse";
    d.id = ActorId::ratThing;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.glyph = 'r';
    d.color = clrBrownDrk;
    d.tile = TileId::ratThing;
    d.hp = 4;
    d.spi = 8;
    d.dmgMelee = 3;
    d.abilityVals.setVal(AbilityId::melee, 25);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 15);
    d.spawnMinDLVL = 2;
    d.spawnMaxDLVL = d.spawnMinDLVL + 15;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::horde;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 5;
    d.descr = "At first sight, a Rat-thing can easily be mistaken for a large, "
              "dark rat. On closer examination, however, their human hands and "
              "evil caricatures of human heads reveal their unnatural nature. "
              "Rat-things are said to be created from dead cultists by foul "
              "witchcraft. Thus, they are found where the witch who created them "
              "had her lair.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::unsettling;
    d.isRat = true;
    d.canBeSummoned = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::human);
    d.nativeRooms.push_back(RoomType::crypt);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Wolf";
    d.nameThe = "The Wolf";
    d.corpseNameA = "A Wolf corpse";
    d.corpseNameThe = "The Wolf corpse";
    d.id = ActorId::wolf;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 0;
    d.glyph = 'd';
    d.color = clrGray;
    d.tile = TileId::wolf;
    d.hp = 4;
    d.spi = 2;
    d.dmgMelee = 3;
    d.abilityVals.setVal(AbilityId::melee, 35);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 20);
    d.canSeeInDarkness = true;
    d.spawnMinDLVL = 0;
    d.spawnMaxDLVL = 10;
    d.groupSize = MonGroupSize::group;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 5;
    d.descr = "A large wolf with eyes full of cunning.";
    d.aggroTextMonSeen = d.nameThe + " snarls at me.";
    d.aggroTextMonHidden = "I hear a chilling howl.";
    d.aggroSfxMonSeen = SfxId::dogSnarl;
    d.aggroSfxMonHidden = SfxId::wolfHowl;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.isCanine = true;
    d.canBeSummoned = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Giant Bat";
    d.nameThe = "The Giant Bat";
    d.corpseNameA = "A Giant Bat corpse";
    d.corpseNameThe = "The Giant Bat corpse";
    d.id = ActorId::giantBat;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fastest;
    d.glyph = 'B';
    d.color = clrGray;
    d.tile = TileId::bat;
    d.hp = 8;
    d.spi = 6;
    d.dmgMelee = 2;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 75);
    d.intrProps[int(PropId::flying)] = true;
    d.spawnMinDLVL = 4;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::group;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.nrTurnsAware = 5;
    d.descr = "An unknown species, perhaps stemming from some hidden bowels of "
              "the earth. It is about as tall as a full-grown human.";
    d.aggroTextMonHidden = "I hear the flapping of great wings.";
    d.aggroSfxMonSeen = SfxId::flappingWings;
    d.aggroSfxMonHidden = SfxId::flappingWings;
    d.erraticMovePct = ActorErraticFreq::very;
    d.monShockLvl = MonShockLvl::unsettling;
    d.canBeSummoned = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::forest);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Byakhee";
    d.nameThe = "The Byakhee";
    d.corpseNameA = "A Byakhee corpse";
    d.corpseNameThe = "The Byakhee corpse";
    d.id = ActorId::byakhee;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fastest;
    d.glyph = 'B';
    d.color = clrBrownDrk;
    d.tile = TileId::byakhee;
    d.hp = 14;
    d.spi = 20;
    d.dmgMelee = 4;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 40);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 40);
    d.intrProps[int(PropId::flying)] = true;
    d.spawnMinDLVL = 6;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.nrTurnsAware = 5;
    d.descr = "\"There flapped rhythmically a horde of tame, trained, hybrid "
              "winged things ... not altogether crows, nor moles, nor buzzards, "
              "nor ants, nor decomposed human beings, but something I cannot and "
              "must not recall.\"-H.P. Lovecraft, \"The Festival\". A Byakhee "
              "appears as a disturbing mixture of creatures composing a humanoid "
              "form. Insect traits vie with predatory birds, digging mammals, "
              "and possibly the necrotic flesh of human victims. At home in "
              "lonely voids of interstellar space, Byakhee are a created race, "
              "though their origin is buried in the distant past.";
    d.aggroTextMonHidden = "I hear the flapping of great wings.";
    d.aggroSfxMonSeen = SfxId::flappingWings;
    d.aggroSfxMonHidden = SfxId::flappingWings;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::scary;
    d.canBeSummoned = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Giant Mantis";
    d.nameThe = "The Giant Mantis";
    d.corpseNameA = "A Giant Mantis corpse";
    d.corpseNameThe = "The Giant Mantis corpse";
    d.id = ActorId::giantMantis;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fastest;
    d.glyph = 'I';
    d.color = clrGreenLgt;
    d.tile = TileId::mantis;
    d.hp = 15;
    d.spi = 20;
    d.dmgMelee = 5;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 40);
    d.abilityVals.setVal(AbilityId::stealth, 20);
    d.spawnMinDLVL = 8;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.nrTurnsAware = 5;
    d.descr = "A huge predatory insect.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::unsettling;
    d.canBeSummoned = false;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Giant Locust";
    d.nameThe = "The Giant Locust";
    d.corpseNameA = "A Giant Locust corpse";
    d.corpseNameThe = "The Giant Locust corpse";
    d.id = ActorId::locust;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.glyph = 'I';
    d.color = clrBrown;
    d.tile = TileId::locust;
    d.hp = 3;
    d.spi = 2;
    d.dmgMelee = 1;
    d.abilityVals.setVal(AbilityId::melee, 25);
    d.intrProps[int(PropId::flying)] = true;
    d.spawnMinDLVL = 7;
    d.spawnMaxDLVL = DLVL_LAST_MID_GAME;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::swarm;
    d.actorSize = ActorSize::floor;
    d.canBashDoors = false;
    d.nrTurnsAware = 12;
    d.descr = "A huge swarming insect. They breed rapidly.";
    d.erraticMovePct = ActorErraticFreq::very;
    d.monShockLvl = MonShockLvl::none;
    d.canBleed = false;
    d.canBeSummoned = false;
    d.nativeRooms.push_back(RoomType::plain);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Fungi from Yuggoth";
    d.nameThe = "The Fungi from Yuggoth";
    d.corpseNameA = "A dead Fungi from Yuggoth";
    d.corpseNameThe = "The dead Fungi from Yuggoth";
    d.id = ActorId::miGo;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = false;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 4;
    d.spellCooldownTurns = 3;
    d.glyph = 'E';
    d.color = clrBrownDrk;
    d.tile = TileId::miGo;
    d.hp = 10;
    d.spi = 20;
    d.dmgMelee = 3;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.abilityVals.setVal(AbilityId::ranged, 55);
    d.intrProps[int(PropId::flying)] = true;
    d.spawnMinDLVL = 6;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.nrTurnsAware = 12;
    d.descr =
        "Fungi are more closely related to animals than plants, so it's no "
        "wonder that on some worlds, fungal life evolved to dominate "
        "animal based intelligences. The Mi-go, as they are called, come "
        "from such a world. More like crustaceans than any other "
        "terrestrial life form, they find themselves somewhat hampered by "
        "our planet's thicker atmosphere and heavy gravity. They are a "
        "highly scientific race with great aptitude for surgery. Typical "
        "Mi-go have heads like large exposed brains, with many "
        "convolutions on the wrinkled surfaces; six to eight limbs, a "
        "single pair of vast membranous wings, and a long semi-prehensile "
        "tail trailing behind. They have visited Earth for centuries to "
        "mine certain minerals not available on their icy world, and more "
        "recently, to study its odd inhabitants. The mi-go are responsible "
        "for many \"alien abduction\" kidnappings. Physically they are not "
        "much more robust than the average human, they rely upon their "
        "superior science to subdue any primitives who stumble upon their "
        "mines and outposts.";
    d.spellCastMsg = d.nameThe + " makes strange gestures in the air.";
    d.aggroTextMonSeen = d.nameThe + " speaks at me in a droning voice.";
    d.aggroTextMonHidden = "I hear a droning voice.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::forest);
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Mi-go Commander";
    d.nameThe = "The Mi-go Commander";
    d.corpseNameA = "A dead Fungi from Yuggoth";
    d.corpseNameThe = "The dead Fungi from Yuggoth";
    d.id = ActorId::miGoCommander;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = false;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 4;
    d.spellCooldownTurns = 3;
    d.glyph = 'E';
    d.color = clrRed;
    d.tile = TileId::miGo;
    d.hp = 24;
    d.spi = 20;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 55);
    d.abilityVals.setVal(AbilityId::ranged, 55);
    d.intrProps[int(PropId::flying)] = true;
    d.spawnMinDLVL = 12;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.nrTurnsAware = 12;
    d.descr = data[size_t(ActorId::miGo)].descr;
    d.spellCastMsg = d.nameThe + " makes strange gestures in the air.";
    d.aggroTextMonSeen = d.nameThe + " speaks at me in a droning voice.";
    d.aggroTextMonHidden = "I hear a droning voice.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::forest);
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Flying Polyp";
    d.nameThe = "The Flying Polyp";
    d.corpseNameA = "A dead Polyp";
    d.corpseNameThe = "The dead Polyp";
    d.id = ActorId::flyingPolyp;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.ai[int(AiId::looks)] = false;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.spellCooldownTurns = 3;
    d.glyph = 'E';
    d.color = clrMagenta;
    d.tile = TileId::polyp;
    d.hp = 12;
    d.spi = 20;
    d.dmgMelee = 4;
    d.abilityVals.setVal(AbilityId::melee, 60);
    d.abilityVals.setVal(AbilityId::stealth, 85);
    d.intrProps[int(PropId::flying)] = true;
    d.intrProps[int(PropId::rPhys)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rAcid)] = true;
    d.intrProps[int(PropId::rCold)] = true;
    d.intrProps[int(PropId::rFire)] = true;
    d.intrProps[int(PropId::rPoison)] = true;
    d.intrProps[int(PropId::rSleep)] = true;
    d.preventKnockback = true;
    d.spawnMinDLVL = 6;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = false;
    d.canOpenDoors = false;
    d.nrTurnsAware = 6;
    d.descr =
        "Flying polyps are a horrible elder race of half polypous, utterly alien "
        "entities. They are only partly material and have the power of aerial "
        "motion, despite the absence of wings. Their senses does not include sight, "
        "but what senses they have can penetrate all material obstructions. They "
        "are invulnerable to normal means of damage, though they can be destroyed "
        "by certain forms of electrical energy.";
    d.aggroTextMonSeen = d.nameThe + " makes shrill whistling sounds.";
    d.aggroTextMonHidden = "I hear a shrill whistling.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::terrifying;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Greater Polyp";
    d.nameThe = "The Greater Polyp";
    d.corpseNameA = "A dead Polyp";
    d.corpseNameThe = "The dead Polyp";
    d.id = ActorId::greaterPolyp;
    d.canBeSummoned = false;
    d.canBleed = false;
    d.ai[int(AiId::looks)] = false;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.spellCooldownTurns = 3;
    d.glyph = 'E';
    d.color = clrRed;
    d.tile = TileId::polyp;
    d.hp = 70;
    d.spi = 30;
    d.dmgMelee = 12;
    d.abilityVals.setVal(AbilityId::melee, 70);
    d.abilityVals.setVal(AbilityId::stealth, 85);
    d.intrProps[int(PropId::flying)] = true;
    d.intrProps[int(PropId::rPhys)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rAcid)] = true;
    d.intrProps[int(PropId::rCold)] = true;
    d.intrProps[int(PropId::rFire)] = true;
    d.intrProps[int(PropId::rPoison)] = true;
    d.intrProps[int(PropId::rSleep)] = true;
    d.preventKnockback = true;
    d.spawnMinDLVL = DLVL_LAST - 4;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::giant;
    d.canBashDoors = false;
    d.canOpenDoors = false;
    d.nrTurnsAware = 6;
    d.descr = data[size_t(ActorId::flyingPolyp)].descr;
    d.aggroTextMonSeen = d.nameThe + " makes shrill whistling sounds.";
    d.aggroTextMonHidden = "I hear a shrill whistling.";
    d.erraticMovePct = ActorErraticFreq::very;
    d.monShockLvl = MonShockLvl::mindShattering;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Ghoul";
    d.nameThe = "The Ghoul";
    d.corpseNameA = "A Ghoul corpse";
    d.corpseNameThe = "The Ghoul corpse";
    d.id = ActorId::ghoul;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.glyph = 'A';
    d.color = clrGreen;
    d.tile = TileId::ghoul;
    d.hp = 21;
    d.spi = 20;
    d.dmgMelee = 4;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.spawnMinDLVL = 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::group;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.nrTurnsAware = 25;
    d.descr = "\"These figures were seldom completely human, but often "
              "approached humanity in varying degrees. Most of the bodies, while "
              "roughly bipedal, had a forward slumping, and a vaguely canine "
              "cast. The texture of the majority was a kind of unpleasant "
              "rubberiness\" -H.P.Lovecraft \"Pickman's Model\". Ghouls are "
              "rubbery, loathsome humanoids with hooflike feet, canine features, "
              "and claws. They are often encrusted with grave mold collected as "
              "they feed.";
    d.aggroTextMonSeen = d.nameThe + " growls at me.";
    d.aggroTextMonHidden = "I hear a chilling howl.";
    d.aggroSfxMonSeen = SfxId::ghoulGrowl;
    d.aggroSfxMonHidden = SfxId::wolfHowl;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::terrifying;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::crypt);
    d.nativeRooms.push_back(RoomType::cave);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Shadow";
    d.nameThe = "The Shadow";
    d.id = ActorId::shadow;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 'M';
    d.color = clrGray;
    d.tile = TileId::shadow;
    d.hp = 4;
    d.spi = 12;
    d.dmgMelee = 3;
    d.abilityVals.setVal(AbilityId::melee, 35);
    d.abilityVals.setVal(AbilityId::stealth, 90);
    d.intrProps[int(PropId::lgtSens)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.preventKnockback = true;
    d.spawnMinDLVL = 4;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = false;
    d.canOpenDoors = false;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.deathMsgOverride = "The shadow fades.";
    d.nrTurnsAware = 25;
    d.descr = "A living shadow";
    d.isAutoDescrAllowed = false;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::plain);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Mummy";
    d.nameThe = "The Mummy";
    d.corpseNameA = "A lifeless Mummy";
    d.corpseNameThe = "The lifeless Mummy";
    d.id = ActorId::mummy;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.spellCooldownTurns = 3;
    d.glyph = 'P';
    d.color = clrMagenta;
    d.tile = TileId::mummy;
    d.hp = 25;
    d.spi = 30;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.spawnMinDLVL = DLVL_FIRST_LATE_GAME - 3;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.nrTurnsAware = 9999;
    d.descr = "A mummified human being, possibly dating back millennia.";
    d.spellCastMsg = "The mummy casts a spell.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::scary;
    d.isUndead = true;
    d.isHumanoid = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Crocodile Head Mummy";
    d.nameThe = "The Crocodile Head Mummy";
    d.corpseNameA = "A lifeless Mummy";
    d.corpseNameThe = "The lifeless Mummy";
    d.id = ActorId::crocHeadMummy;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 'P';
    d.color = clrGray;
    d.tile = TileId::crocHeadMummy;
    d.hp = 25;
    d.spi = 30;
    d.dmgMelee = 8;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.spawnMinDLVL = DLVL_FIRST_LATE_GAME - 3;
    d.groupSize = MonGroupSize::swarm;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.nrTurnsAware = 9999;
    d.descr =
        "A grotesque mummified hybrid creature, with the body of a human and the head "
        "of a crocodile. It is wielding a spear.";
    d.spellCastMsg = "The mummy casts a spell.";
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::terrifying;
    d.isUndead = true;
    d.isHumanoid = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Khephren";
    d.nameThe = "Khephren";
    d.corpseNameA = "The lifeless Mummy of Khephren";
    d.corpseNameThe = d.corpseNameA;
    d.id = ActorId::khephren;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.spellCooldownTurns = 3;
    d.isUnique = true;
    d.nrLeftAllowedToSpawn = 0;
    d.glyph = 'P';
    d.color = clrRed;
    d.tile = TileId::mummy;
    d.hp = 70;
    d.spi = 60;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.spawnMinDLVL = DLVL_LAST_MID_GAME;
    d.isAutoSpawnAllowed = false;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.nrTurnsAware = 9999;
    d.descr = "The mummified fourth dynasty Egyptian pharaoh Khephren. How he "
              "came to dwell here is beyond my guess. His name means "
              "\"Rise, Ra!\"";
    d.spellCastMsg = "Khephren casts a spell.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::terrifying;
    d.isUndead = true;
    d.isHumanoid = true;
    d.nativeRooms.push_back(RoomType::plain);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Nitokris";
    d.nameThe = "Nitokris";
    d.corpseNameA = "The lifeless Mummy of Nitokris";
    d.corpseNameThe = d.corpseNameA;
    d.id = ActorId::nitokris;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.spellCooldownTurns = 3;
    d.isUnique = true;
    d.nrLeftAllowedToSpawn = 1;
    d.glyph = 'P';
    d.color = clrRedLgt;
    d.tile = TileId::mummy;
    d.hp = 70;
    d.spi = 60;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.spawnMinDLVL = 11;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.nrTurnsAware = 9999;
    d.descr = "The mummified sixth dynasty Egyptian pharaoh Nitokris. How she "
              "came to dwell here is beyond my guess. Her name is found in the "
              "histories of Herodotus and writings of Manetho. According to the "
              "writings of the former, she took the throne by inviting her "
              "brothers murderers to a banquet. Then killed them by flooding the "
              "sealed room with the Nile.";
    d.spellCastMsg = "Nitokris casts a spell.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::terrifying;
    d.isUndead = true;
    d.isHumanoid = true;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Deep One";
    d.nameThe = "The Deep One";
    d.corpseNameA = "A corpse of a Deep One";
    d.corpseNameThe = "The corpse of a Deep One";
    d.id = ActorId::deepOne;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 15;
    d.glyph = 'F';
    d.color = clrWhite;
    d.tile = TileId::deepOne;
    d.hp = 10;
    d.spi = 12;
    d.dmgMelee = 5;
    d.dmgRanged = 5;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.abilityVals.setVal(AbilityId::ranged, 40);
    d.spawnMinDLVL = 6;
    d.groupSize = MonGroupSize::horde;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.nrTurnsAware = 20;
    d.descr = "Deep ones are misbegotten creatures of the deep. A deep one "
              "appears as an abominable crossbreed of a human and amphibian. Its "
              "fins are merged with twisted arms and legs; its bent back is "
              "crowned with a long, spiny frill. They can breathe both air and "
              "water. In the timeless depths of the sea, the deep one's alien, "
              "arrogant lives are coldly beautiful, unbelievably cruel, and "
              "effectively immortal. Deep ones may be worshipped by humans with "
              "whom they regularly interbreed.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::flooded);
    d.nativeRooms.push_back(RoomType::muddy);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Carnivorous Ape";
    d.nameThe = "The Carnivorous Ape";
    d.corpseNameA = "An Ape corpse";
    d.corpseNameThe = "The Ape corpse";
    d.id = ActorId::ape;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.glyph = 'A';
    d.color = clrWhite;
    d.tile = TileId::ape;
    d.hp = 18;
    d.spi = 6;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.abilityVals.setVal(AbilityId::dodgeAtt, 35);
    d.spawnMinDLVL = DLVL_FIRST_LATE_GAME;
    d.groupSize = MonGroupSize::group;
    d.actorSize = ActorSize::humanoid;
    d.isHumanoid = true;
    d.canBashDoors = true;
    d.canOpenDoors = false;
    d.canSeeInDarkness = true;
    d.nrTurnsAware = 6;
    d.descr =
        "An extremely aggressive species of great ape. Their pale skin and excellent "
        "night vision indicates that they adapted to subterranean life a very long time "
        "ago.";
    d.aggroTextMonHidden = "I hear a beast howling.";
    d.aggroTextMonSeen = d.nameThe + " howls at me.";
    d.aggroSfxMonSeen = SfxId::ape;
    d.aggroSfxMonHidden = SfxId::ape;
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::unsettling;
    d.nativeRooms.push_back(RoomType::forest);
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::monster);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Worm Mass";
    d.nameThe = "The Worm Mass";
    d.id = ActorId::wormMass;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 'w';
    d.color = clrWhite;
    d.tile = TileId::massOfWorms;
    d.hp = 2;
    d.spi = 1;
    d.dmgMelee = 2;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.spawnMinDLVL = 3;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 10;
    d.descr = "A slithering conglomeration of carnivorous worms. They multiply rapidly.";
    d.canBeSummoned = true;
    d.isAutoDescrAllowed = false;
    d.erraticMovePct = ActorErraticFreq::very;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::monster);
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::forest);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Dust Vortex";
    d.nameThe = "The Dust Vortex";
    d.id = ActorId::dustVortex;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.glyph = 'V';
    d.color = clrGray;
    d.tile = TileId::vortex;
    d.hp = 10;
    d.spi = 12;
    d.dmgMelee = 4;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.intrProps[int(PropId::flying)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.intrProps[int(PropId::rPoison)] = true;
    d.preventKnockback = true;
    d.spawnMinDLVL = 8;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 5;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = true;
    d.descr = "A spinning force of destruction. It seems to move with some "
              "manner of purpose.";
    d.aggroTextMonHidden = "I hear a howling wind.";
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.erraticMovePct = ActorErraticFreq::very;
    d.monShockLvl = MonShockLvl::unsettling;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Fire Vortex";
    d.nameThe = "The Fire Vortex";
    d.id = ActorId::fireVortex;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::normal ;
    d.rangedCooldownTurns = 0;
    d.glyph = 'V';
    d.color = clrRed;
    d.tile = TileId::vortex;
    d.hp = 16;
    d.spi = 12;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.intrProps[int(PropId::flying)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.intrProps[int(PropId::rFire)] = true;
    d.intrProps[int(PropId::rPoison)] = true;
    d.preventKnockback = true;
    d.spawnMinDLVL = 13;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 5;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = true;
    d.descr = "A spinning force of fire and destruction. It seems to move with "
              "some manner of purpose.";
    d.aggroTextMonHidden = "I hear a howling wind.";
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.erraticMovePct = ActorErraticFreq::very;
    d.monShockLvl = MonShockLvl::unsettling;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Frost Vortex";
    d.nameThe = "The Frost Vortex";
    d.id = ActorId::frostVortex;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::normal ;
    d.rangedCooldownTurns = 0;
    d.glyph = 'V';
    d.color = clrBlueLgt;
    d.tile = TileId::vortex;
    d.hp = 16;
    d.spi = 12;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 40);
    d.intrProps[int(PropId::flying)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.intrProps[int(PropId::rCold)] = true;
    d.intrProps[int(PropId::rPoison)] = true;
    d.preventKnockback = true;
    d.spawnMinDLVL = 13;
    d.groupSize = MonGroupSize::few;
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 5;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = true;
    d.descr = "A spinning force of ice and destruction. It seems to move with "
              "some manner of purpose.";
    d.aggroTextMonHidden = "I hear a howling wind.";
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.erraticMovePct = ActorErraticFreq::very;
    d.monShockLvl = MonShockLvl::unsettling;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Black Ooze";
    d.nameThe = "The Black Ooze";
    d.id = ActorId::oozeBlack;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::sluggish;
    d.rangedCooldownTurns = 0;
    d.glyph = 'o';
    d.color = clrGrayDrk;
    d.tile = TileId::ooze;
    d.hp = 14;
    d.spi = 12;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.intrProps[int(PropId::ooze)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.spawnMinDLVL = 3;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::horde;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 250;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = false;
    d.descr = "It's just a mass of gunk, but it seems sentient.";
    d.deathMsgOverride = "The Ooze disintegrates.";
    d.aggroTextMonSeen = d.nameThe + " makes a gurgling noise.";
    d.aggroTextMonHidden = "I hear a gurgling noise.";
    d.aggroSfxMonSeen = SfxId::oozeGurgle;
    d.aggroSfxMonHidden = SfxId::oozeGurgle;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::unsettling;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::flooded);
    d.nativeRooms.push_back(RoomType::muddy);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Clear Ooze";
    d.nameThe = "The Clear Ooze";
    d.id = ActorId::oozeClear;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::sluggish;
    d.rangedCooldownTurns = 0;
    d.glyph = 'o';
    d.color = clrWhiteHigh;
    d.tile = TileId::ooze;
    d.hp = 8;
    d.spi = 12;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.abilityVals.setVal(AbilityId::stealth, 90);
    d.intrProps[int(PropId::ooze)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.spawnMinDLVL = 4;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::horde;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 250;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = false;
    d.descr = "It's a clear mass of gunk. They can be hard to spot.";
    d.deathMsgOverride = "The Ooze disintegrates.";
    d.aggroTextMonSeen = d.nameThe + " makes a gurgling noise.";
    d.aggroTextMonHidden = "I hear a gurgling noise.";
    d.aggroSfxMonSeen = SfxId::oozeGurgle;
    d.aggroSfxMonHidden = SfxId::oozeGurgle;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.monShockLvl = MonShockLvl::scary;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::flooded);
    d.nativeRooms.push_back(RoomType::muddy);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Putrid Ooze";
    d.nameThe = "The Putrid Ooze";
    d.id = ActorId::oozePutrid;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::sluggish;
    d.rangedCooldownTurns = 0;
    d.glyph = 'o';
    d.color = clrGreen;
    d.tile = TileId::ooze;
    d.hp = 14;
    d.spi = 12;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.intrProps[int(PropId::ooze)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.spawnMinDLVL = 5;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::horde;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 250;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = false;
    d.descr = "It's just a mass of gunk, but it seems sentient. It stinks like "
              "rotting cadavers.";
    d.deathMsgOverride = "The Ooze disintegrates.";
    d.aggroTextMonSeen = d.nameThe + " makes a gurgling noise.";
    d.aggroTextMonHidden = "I hear a gurgling noise.";
    d.aggroSfxMonSeen = SfxId::oozeGurgle;
    d.aggroSfxMonHidden = SfxId::oozeGurgle;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::flooded);
    d.nativeRooms.push_back(RoomType::muddy);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Poison Ooze";
    d.nameThe = "The Poison Ooze";
    d.id = ActorId::oozePoison;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::sluggish;
    d.rangedCooldownTurns = 0;
    d.glyph = 'o';
    d.color = clrGreenLgt;
    d.tile = TileId::ooze;
    d.hp = 16;
    d.spi = 12;
    d.dmgMelee = 6;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.intrProps[int(PropId::ooze)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.intrProps[int(PropId::rPoison)] = true;
    d.spawnMinDLVL = 9;
    d.spawnMaxDLVL = d.spawnMinDLVL + 5;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::horde;
    d.actorSize = ActorSize::floor;
    d.nrTurnsAware = 250;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = false;
    d.descr = "It's just a mass of gunk, but it seems sentient. It drips and "
              "sizzles with poison.";
    d.deathMsgOverride = "The Ooze disintegrates.";
    d.aggroTextMonSeen = d.nameThe + " makes a gurgling noise.";
    d.aggroTextMonHidden = "I hear a gurgling noise.";
    d.aggroSfxMonSeen = SfxId::oozeGurgle;
    d.aggroSfxMonHidden = SfxId::oozeGurgle;
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::flooded);
    d.nativeRooms.push_back(RoomType::muddy);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Colour out of space";
    d.nameThe = "The Colour out of space";
    d.id = ActorId::colourOOSpace;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::sluggish;
    d.rangedCooldownTurns = 0;
    d.glyph = 'O';
    d.color = clrGreenLgt;
    d.tile = TileId::ooze;
    d.hp = 70;
    d.spi = 40;
    d.dmgMelee = 10;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.intrProps[int(PropId::ooze)] = true;
    d.intrProps[int(PropId::ethereal)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.spawnMinDLVL = 14;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 250;
    d.canOpenDoors = false;
    d.canBashDoors = false;
    d.descr = "A very peculiar floating speck of strange and shifting colours. "
              "It is hard to tell what colour it is exactly.";
    d.isAutoDescrAllowed = false;
    d.deathMsgOverride = "The Colour disintegrates.";
    d.canBeSummoned = true;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.erraticMovePct = ActorErraticFreq::very;
    d.monShockLvl = MonShockLvl::scary;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::flooded);
    d.nativeRooms.push_back(RoomType::muddy);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Chthonian";
    d.nameThe = "The Chthonian";
    d.corpseNameA = "A Chthonian corpse";
    d.corpseNameThe = "The Chthonian corpse";
    d.id = ActorId::chthonian;
    d.ai[int(AiId::looks)] = false;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::sluggish;
    d.glyph = 'W';
    d.color = clrBrownDrk;
    d.tile = TileId::chthonian;
    d.hp = 200;
    d.spi = 40;
    d.dmgMelee = 10;
    d.abilityVals.setVal(AbilityId::melee, 45);
    d.intrProps[int(PropId::burrowing)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.preventKnockback = true;
    d.spawnMinDLVL = 12;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 5;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = false;
    d.descr = "It resembles an immense squid, with reaching, groping tentacles, "
              "and a pulpy, elongated sack of a body. Chthonians are powerful "
              "burrowers, and live for more than a thousand years.";
    d.aggroTextMonSeen = "";
    d.aggroTextMonHidden = "";
    d.aggroSfxMonSeen = SfxId::END;
    d.aggroSfxMonHidden = SfxId::END;
    d.canBleed = true;
    d.canBeSummoned = false;
    d.monShockLvl = MonShockLvl::mindShattering;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Hunting Horror";
    d.nameThe = "The Hunting Horror";
    d.corpseNameA = "A Hunting Horror corpse";
    d.corpseNameThe = "The Hunting Horror corpse";
    d.id = ActorId::huntingHorror;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::fastest;
    d.rangedCooldownTurns = 0;
    d.glyph = 'W';
    d.color = clrGrayDrk;
    d.tile = TileId::huntingHorror;
    d.hp = 90;
    d.spi = 40;
    d.dmgMelee = 12;
    d.abilityVals.setVal(AbilityId::melee, 75);
    d.intrProps[int(PropId::flying)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.preventKnockback = true;
    d.spawnMinDLVL = DLVL_LAST - 6;
    d.spawnMaxDLVL = 999;
    d.canSeeInDarkness = true;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::giant;
    d.nrTurnsAware = 4;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = true;
    d.descr = "It resembles an enormous black ropy worm, like a legless dragon "
              "seen in a nightmare. A great gaping maw filled with jagged, "
              "irregular teeth gapes open hungrily as it flies in search of "
              "prey. Hunting horrors haunt the dark places of the universe, from "
              "which they are called up at the whim of their lord Nyarlathotep.";
    d.aggroTextMonHidden = "I hear the flapping of great wings.";
    d.aggroSfxMonSeen = SfxId::flappingWings;
    d.aggroSfxMonHidden = SfxId::flappingWings;
    d.canBleed = true;
    d.canBeSummoned = false;
    d.monShockLvl = MonShockLvl::mindShattering;
    d.nativeRooms.push_back(RoomType::forest);
    d.nativeRooms.push_back(RoomType::plain);
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::chasm);
    d.erraticMovePct = ActorErraticFreq::somewhat;
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "A Sentry Drone";
    d.nameThe = "The Sentry Drone";
    d.corpseNameA = "A destroyed Sentry Drone";
    d.corpseNameThe = "The destroyed Sentry Drone";
    d.id = ActorId::sentryDrone;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = false;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::fast;
    d.rangedCooldownTurns = 3;
    d.spellCooldownTurns  = 3;
    d.glyph = '~';
    d.color = clrRed;
    d.tile = TileId::device2;
    d.hp = 20;
    d.spi = 40;
    d.dmgRanged = 6;
    d.abilityVals.setVal(AbilityId::melee, 50);
    d.abilityVals.setVal(AbilityId::ranged, 65);
    d.intrProps[int(PropId::flying)] = true;
    d.intrProps[int(PropId::radiant)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rBreath)] = true;
    d.intrProps[int(PropId::rPoison)] = true;
    d.intrProps[int(PropId::rSleep)] = true;
    d.intrProps[int(PropId::rDisease)] = true;
    d.spawnMinDLVL = 14;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = false;
    d.canOpenDoors = false;
    d.nrTurnsAware = 25;
    d.descr =
        "An infernal piece of technology, seemingly designed to serve as a sort of "
        "guard. It hovers around, constantly searching the area with beaming "
        "spotlights, ready to blast any interloper on sight. It appears to have "
        "some organic parts, and may even be a conscious living being.";
    d.spellCastMsg = "The Sentry Drone shifts and rotates madly.";
    d.aggroTextMonSeen = d.nameThe + " makes a deep buzzing sound.";
    d.aggroTextMonHidden = "I hear a deep buzzing sound.";
    d.erraticMovePct = ActorErraticFreq::rare;
    d.monShockLvl = MonShockLvl::unsettling;
    d.nativeRooms.push_back(RoomType::plain);
    data[size_t(d.id)] = d;
    d.reset();

    d.id = ActorId::mold;
    d.nameA = "Mold";
    d.nameThe = "The Mold";
    d.corpseNameA = "";
    d.corpseNameThe = "";
    d.tile = TileId::fungi;
    d.glyph = 'e';
    d.color = clrGreenLgt;
    d.groupSize = MonGroupSize::few;
    d.hp = 1;
    d.spi = 1;
    d.dmgMelee = 1;
    d.abilityVals.setVal(AbilityId::melee, 10);
    d.speed = ActorSpeed::slow;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::movesToRandomWhenUnaware)] = false;
    d.preventKnockback = true;
    d.nrTurnsAware = 25;
    d.spawnMinDLVL = 3;
    d.actorSize = ActorSize::floor;
    d.isAutoDescrAllowed = false;
    d.deathMsgOverride = "The Mold is destroyed.";
    d.canSeeInDarkness = true;
    d.erraticMovePct = ActorErraticFreq::never;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.descr =
        "A sickly growth thriving in damp areas. It produces toxic spores which it "
        "stores in its slimy heads.";
    d.aggroTextMonSeen = "";
    d.aggroTextMonHidden = "";
    d.aggroSfxMonSeen = SfxId::END;
    d.aggroSfxMonHidden = SfxId::END;
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::flooded);
    d.nativeRooms.push_back(RoomType::muddy);
    d.nativeRooms.push_back(RoomType::forest);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "Gas Spore";
    d.nameThe = "The Gas Spore";
    d.id = ActorId::gasSpore;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = false;
    d.ai[int(AiId::pathsToTgtWhenAware)] = false;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = true;
    d.ai[int(AiId::movesToLeader)] = false;
    d.speed = ActorSpeed::slow;
    d.rangedCooldownTurns = 0;
    d.glyph = 'E';
    d.color = clrRed;
    d.tile = TileId::gasSpore;
    d.hp = 1;
    d.spi = 1;
    d.intrProps[int(PropId::flying)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rConf)] = true;
    d.spawnMinDLVL = 3;
    d.groupSize = MonGroupSize::group;
    d.actorSize = ActorSize::humanoid;
    d.nrTurnsAware = 5;
    d.isAutoDescrAllowed = true;
    d.canOpenDoors = false;
    d.canBashDoors = false;
    d.descr =
        "A vaguely intelligent floating fungus-based organism. It contains a highly "
        "explosive gas and will detonate very easily, which it seems to desire.";
    d.aggroTextMonHidden = "";
    d.canBeSummoned = false;
    d.canBleed = false;
    d.canLeaveCorpse = false;
    d.canSeeInDarkness = true;
    d.erraticMovePct = ActorErraticFreq::somewhat;
    d.monShockLvl = MonShockLvl::none;
    d.nativeRooms.push_back(RoomType::cave);
    d.nativeRooms.push_back(RoomType::flooded);
    d.nativeRooms.push_back(RoomType::muddy);
    d.nativeRooms.push_back(RoomType::forest);
    d.nativeRooms.push_back(RoomType::chasm);
    data[size_t(d.id)] = d;
    d.reset();

    d.nameA = "The High Priest";
    d.nameThe = d.nameA;
    d.id = ActorId::theHighPriest;
    d.ai[int(AiId::looks)] = true;
    d.ai[int(AiId::makesRoomForFriend)] = false;
    d.ai[int(AiId::attacks)] = true;
    d.ai[int(AiId::pathsToTgtWhenAware)] = true;
    d.ai[int(AiId::movesToTgtWhenLos)] = true;
    d.ai[int(AiId::movesToLair)] = false;
    d.ai[int(AiId::movesToLeader)] = true;
    d.speed = ActorSpeed::normal;
    d.rangedCooldownTurns = 0;
    d.spellCooldownTurns = 7;
    d.isUnique = true;
    d.nrLeftAllowedToSpawn = 0;
    d.glyph = 'P';
    d.color = clrRed;
    d.tile = TileId::theHighPriest;
    d.hp = 250;
    d.spi = 99999;
    d.intrProps[int(PropId::rConf)] = true;
    d.intrProps[int(PropId::rFear)] = true;
    d.intrProps[int(PropId::rFire)] = true;
    d.intrProps[int(PropId::rBreath)] = true;
    d.dmgMelee = 10;
    d.abilityVals.setVal(AbilityId::melee, 70);
    d.isAutoSpawnAllowed = false;
    d.groupSize = MonGroupSize::alone;
    d.actorSize = ActorSize::humanoid;
    d.canBashDoors = true;
    d.canOpenDoors = true;
    d.preventKnockback = true;
    d.nrTurnsAware = 9999;
    d.descr =
        "The Grand Wizard of the Cult of Starry Wisdom. He appears incredibly old, "
        "like a hideous ancient vampire or a grim reaper. Tattered crimson robes flow "
        "from his skeletal frame, his bony fingers extends into razor sharp claws, and "
        "he has a grim expression on his face.";
    d.isAutoDescrAllowed = false;
    d.spellCastMsg = "The High Priest makes strange gestures in the air.";
    d.erraticMovePct = ActorErraticFreq::never;
    d.monShockLvl = MonShockLvl::scary;
    d.isHumanoid = true;
    d.canLeaveCorpse = false;
    d.canBleed = false;
    data[size_t(d.id)] = d;
    d.reset();

    d = data[size_t(ActorId::theHighPriest)]; // NOTE: Copy of The High Priest
    d.id = ActorId::theHighPriestCpy;
    d.deathMsgOverride = "The Copy vanishes.";
    data[size_t(d.id)] = d;
    d.reset();
}

} //namespace

void init()
{
    TRACE_FUNC_BEGIN;
    initDataList();
    TRACE_FUNC_END;
}

void storeToSaveLines(vector<string>& lines)
{
    for (int i = 0; i < int(ActorId::END); ++i)
    {
        const auto& d = data[i];

        lines.push_back(toStr(d.nrLeftAllowedToSpawn));
        lines.push_back(toStr(d.nrKills));
    }
}

void setupFromSaveLines(vector<string>& lines)
{
    for (int i = 0; i < int(ActorId::END); ++i)
    {
        auto& d = data[i];

        d.nrLeftAllowedToSpawn = toInt(lines.front());
        lines.erase(begin(lines));

        d.nrKills = toInt(lines.front());
        lines.erase(begin(lines));
    }
}

} //ActorData
