#include <string>
#include <vector>
#include <math.h>

#include "ActorData.h"

#include "CmnTypes.h"
#include "Converters.h"
#include "Item.h"
#include "RoomTheme.h"

using namespace std;

void ActorDataT::reset() {
  id = actor_empty;
  name_a = "";
  name_the = "";
  tile = TileId::empty;
  glyph = 'X';
  color = clrYellow;
  groupSize = monsterGroupSize_alone;
  hp = dmgMelee = dmgRanged = 1;
  spi = 12;
  speed = ActorSpeed::normal;
  for(int i = 0; i < endOfPropIds; i++) {intrProps[i] = false;}
  rangedCooldownTurns = spellCooldownTurns = 0;
  abilityVals.reset();
  for(int i = 0; i < int(AiId::endOfAi); i++) {ai[i] = false;}
  nrTurnsAwarePlayer = 0;
  spawnMinDLVL = spawnMaxDLVL = 999;
  actorSize = actorSize_humanoid;
  isHumanoid = false;
  isAutoDescrAllowed = true;
  deathMessageOverride = "";
  nrKills = 0;
  canOpenDoors = canBashDoors = false;
  canSeeInDarkness = false;
  nrLeftAllowedToSpawn = -1;
  isUnique = false;
  isAutoSpawnAllowed = true;
  spellCastMessage = "[SPELL MESSAGE HERE]";
  erraticMovement = actorErratic_rare;
  monsterShockLevel = MonsterShockLevel::none;
  isRat = isCanine = isSpider = isUndead = isGhost = false;
  canBeSummoned = false;
  canBleed = true;
  canLeaveCorpse = true;
  nativeRooms.resize(0);
  descr = "";
  aggroTextMonsterSeen = "";
  aggroTextMonsterHidden = "";
  aggroSfxMonsterSeen = SfxId::endOfSfxId;
  aggroSfxMonsterHidden = SfxId::endOfSfxId;
}

namespace ActorData {

namespace {

void initDataList() {
  ActorDataT d;
  d.reset();
  data[d.id] = d;

  d.name_a = "Player";
  d.name_the = "Player";
  d.id = actor_player;
  d.hp = PLAYER_START_HP;
  d.spi = PLAYER_START_SPI;
  d.speed = ActorSpeed::normal;
  d.glyph = '@';
  d.color = clrWhiteHigh;
  d.tile = TileId::playerFirearm;
  d.isAutoSpawnAllowed = false;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  data[d.id] = d;
  d.reset();

  d.name_a = "A Reanimated Corpse";
  d.name_the = "The Reanimated Corpse";
  d.id = actor_zombie;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.glyph = 'Z';
  d.color = clrBrown;
  d.tile = TileId::zombieUnarmed;
  d.hp = 10;
  d.dmgMelee = 4;
  d.abilityVals.setVal(AbilityId::melee, 25);
  d.spawnMinDLVL = 1;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL - 1;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canBashDoors = true;
  d.canSeeInDarkness = true;
  d.nrTurnsAwarePlayer = 12;
  d.descr = "This rotting thing appears to have been brought back to life "
            "through some abominable process. It has grown sharp claws to "
            "attack with.";
  d.aggroTextMonsterSeen = d.name_the + " growls at me.";
  d.aggroTextMonsterHidden = "I hear a growling voice.";
  d.aggroSfxMonsterSeen = SfxId::zombieGrowl;
  d.aggroSfxMonsterHidden = SfxId::zombieGrowl;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.isUndead = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::crypt);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Reanimated Corpse";
  d.name_the = "The Reanimated Corpse";
  d.id = actor_zombieAxe;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.glyph = 'Z';
  d.color = clrGray;
  d.tile = TileId::zombieArmed;
  d.hp = 10;
  d.dmgMelee = 8;
  d.abilityVals.setVal(AbilityId::melee, 35);
  d.abilityVals.setVal(AbilityId::ranged, 0);
  d.spawnMinDLVL = 2;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL - 1;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canBashDoors = true;
  d.canSeeInDarkness = true;
  d.nrTurnsAwarePlayer = 10;
  d.descr = "This rotting thing appears to have been brought back to life "
            "through some abominable process. It is wielding a rusty axe.";
  d.aggroTextMonsterSeen = d.name_the + " growls at me.";
  d.aggroTextMonsterHidden = "I hear a growling voice.";
  d.aggroSfxMonsterSeen = SfxId::zombieGrowl;
  d.aggroSfxMonsterHidden = SfxId::zombieGrowl;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.isUndead = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::crypt);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Bloated Corpse";
  d.name_the = "The Bloated Corpse";
  d.id = actor_bloatedZombie;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 20;
  d.glyph = 'Z';
  d.color = clrWhiteHigh;
  d.tile = TileId::zombieBloated;
  d.hp = 14;
  d.dmgMelee = 4;
  d.dmgRanged = 3;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 50);
  d.spawnMinDLVL = 3;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL - 1;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canBashDoors = true;
  d.canSeeInDarkness = true;
  d.nrTurnsAwarePlayer = 50;
  d.descr = "This lumbering giant corpse seems to be artificially bloated "
            "somehow. It is constantly oozing putrid liquid that it can spit "
            "to attack with.";
  d.aggroTextMonsterHidden = "I hear heavy footsteps.";
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.isUndead = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::crypt);
  data[d.id] = d;
  d.reset();

  d.name_a = "Major Clapham-Lee";
  d.name_the = "Major Clapham-Lee";
  d.id = actor_majorClaphamLee;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.glyph = 'Z';
  d.color = clrCyanLgt;
  d.tile = TileId::zombieUnarmed;
  d.hp = 24;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 40);
  d.spawnMinDLVL = 4;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canBashDoors = true;
  d.canSeeInDarkness = true;
  d.nrTurnsAwarePlayer = 999;
  d.descr = "Major Sir Eric Moreland Clapham-Lee was once a commanding officer "
            "during the Great War. Shortly after his plane was shot down, his "
            "body was stolen. Now he roams these halls as a resurrected "
            "warrior in service of the cult, commanding a squad of undead.";
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.isUndead = true;
  d.isUnique = true;
  d.nrLeftAllowedToSpawn = 1;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::crypt);
  data[d.id] = d;
  d.reset();

  d.name_a = "Dean Halsey";
  d.name_the = "Dean Halsey";
  d.id = actor_deanHalsey;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.glyph = 'Z';
  d.color = clrCyan;
  d.tile = TileId::zombieUnarmed;
  d.hp = 24;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 40);
  d.isAutoSpawnAllowed = false;
  d.spawnMinDLVL = 4;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canBashDoors = true;
  d.canSeeInDarkness = true;
  d.nrTurnsAwarePlayer = 999;
  d.descr = "Alan Halsey was the dean of the Miskatonic University in New "
            "England. He must have gotten into the hands of the Cult, who "
            "turned him into the hellish zombie warrior I now see before me.";
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.isUndead = true;
  d.isUnique = true;
  d.nrLeftAllowedToSpawn = 0;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::crypt);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Cultist";
  d.name_the = "The Cultist";
  d.id = actor_cultist;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 3;
  d.spellCooldownTurns = 4;
  d.glyph = 'P';
  d.color = clrGray;
  d.tile = TileId::cultistFirearm;
  d.hp = 4;
  d.spi = 12;
  d.abilityVals.setVal(AbilityId::melee, 35);
  d.abilityVals.setVal(AbilityId::ranged, 50);
  d.spawnMinDLVL = 1;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL - 1;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canOpenDoors = true;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 25;
  d.descr = "A fanatic cultist of the lowest rank, madly gibbering in some "
            "half-lost language.";
  d.spellCastMessage = "The acolyte makes strange gestures in the air.";
  d.erraticMovement = actorErratic_rare;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::human);
  d.nativeRooms.push_back(RoomThemeId::ritual);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Cultist";
  d.name_the = "The Cultist";
  d.id = actor_cultistTeslaCannon;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 3;
  d.spellCooldownTurns = 4;
  d.glyph = 'P';
  d.color = clrYellow;
  d.tile = TileId::cultistFirearm;
  d.hp = 5;
  d.spi = 12;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 50);
  d.spawnMinDLVL = 7;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL - 1;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canOpenDoors = true;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 25;
  d.descr = "A fanatic cultist of the lowest rank, madly gibbering in some "
            "half-lost language. It is wielding a Tesla Cannon.";
  d.spellCastMessage = "The acolyte makes strange gestures in the air.";
  d.erraticMovement = actorErratic_rare;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::human);
  d.nativeRooms.push_back(RoomThemeId::ritual);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Cultist";
  d.name_the = "The Cultist";
  d.id = actor_cultistSpikeGun;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 3;
  d.spellCooldownTurns = 4;
  d.glyph = 'P';
  d.color = clrBlueLgt;
  d.tile = TileId::cultistFirearm;
  d.hp = 6;
  d.spi = 12;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 40);
  d.spawnMinDLVL = 4;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL - 1;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canOpenDoors = true;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 25;
  d.descr = "A fanatic cultist of the lowest rank, madly gibbering in some "
            "half-lost language. It is wielding a Spike gun.";
  d.spellCastMessage = "The acolyte makes strange gestures in the air.";
  d.erraticMovement = actorErratic_rare;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::human);
  d.nativeRooms.push_back(RoomThemeId::ritual);
  data[d.id] = d;
  d.reset();

  d.name_a = "Keziah Mason";
  d.name_the = "Keziah Mason";
  d.id = actor_keziahMason;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.spellCooldownTurns = 2;
  d.glyph = 'P';
  d.color = clrMagenta;
  d.tile = TileId::witchOrWarlock;
  d.hp = 10;
  d.spi = 40;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 40);
  d.nrLeftAllowedToSpawn = 1;
  d.isUnique = true;
  d.canSeeInDarkness = true;
  d.spawnMinDLVL = 3;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.descr = "During the Salem witch trials of 1692 an old woman by the name of "
            "Keziah Mason was arrested for her suspicious behavior and seeming "
            "insight into other worlds. In her testimony to the judge, she "
            "confessed to having signed her name in the Black Book of "
            "Azathoth, and of her secret name of Nahab. She later disappeared "
            "mysteriously from Salem. She is described as having a \"bent "
            "back, long nose, and shrivelled chin\" and has a \"croaking "
            "voice\". She has an animal familiar; the rat Brown Jenkin, which "
            "she trusts to carry messages between her and the devil. She feeds "
            "this creature on her blood.";
  d.spellCastMessage = "Keziah makes strange gestures in the air.";
  d.aggroTextMonsterSeen = d.name_the + " chortles at me in a croaking voice.";
  d.aggroTextMonsterHidden = "I hear a repulsive croaking voice.";
  d.nrTurnsAwarePlayer = 999;
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::ritual);
  data[d.id] = d;
  d.reset();

  d.name_a = "Brown Jenkin";
  d.name_the = "Brown Jenkin";
  d.id = actor_brownJenkin;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.glyph = 'r';
  d.color = clrMagenta;
  d.tile = TileId::ratThing;
  d.hp = 10;
  d.dmgMelee = 4;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.isAutoSpawnAllowed = false;
  d.nrLeftAllowedToSpawn = 0;
  d.isUnique = true;
  d.canSeeInDarkness = true;
  d.spawnMinDLVL = data[actor_keziahMason].spawnMinDLVL;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_floor;
  d.descr = "\"That object - no larger than a good sized rat and quaintly "
            "called by the townspeople, \"Brown Jenkin\" - seemed to have been "
            "the fruit of a remarkable case of sympathetic herd-delusion, for "
            "in 1692, no less than eleven persons had persons had testified to "
            "glimpsing it. There were recent rumors, too, with a baffling and "
            "disconcerting amount of agreement. Witnesses said it had long "
            "hair and the shape of a rat, but that its sharp-toothed, bearded "
            "face was evilly human while its paws were like tiny human hands. "
            "It took messages betwixt old Keziah and the devil, and was nursed "
            "on the witch's blood, which it sucked like a vampire. Its voice "
            "was a kind of loathsome titter, and could speak all languages.\" "
            "H.P.Lovecraft -\"Dreams in the witch house\".";
  d.aggroTextMonsterSeen = d.name_the + " titters at me in a loathsome voice.";
  d.aggroTextMonsterHidden = "I hear a loathsome titter.";
  d.nrTurnsAwarePlayer = 999;
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.isRat = true;
  data[d.id] = d;
  d.reset();

//  d.name_a = "The Lord of Pestilence";
//  d.name_the = "The Lord of Pestilence";
//  d.id = actor_lordOfPestilence;

//  d.name_a = "The Lord of Shadows";
//  d.name_the = "The Lord of Shadows";
//  d.id = actor_lordOfShadows;

//  d.name_a = "The Lord of Spiders";
//  d.name_the = "The Lord of Spiders";
//  d.id = actor_lordOfSpiders;

//  d.name_a = "The Lord of Spirits";
//  d.name_the = "The Lord of Spirits";
//  d.id = actor_lordOfSpirits;

  d.name_a = "A Cultist Priest";
  d.name_the = "The Cultist Priest";
  d.id = actor_cultistPriest;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.spellCooldownTurns = 2;
  d.glyph = 'P';
  d.color = clrCyanLgt;
  d.tile = TileId::cultistDagger;
  d.hp = 6;
  d.spi = 20;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.spawnMinDLVL = 5;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL - 1;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canOpenDoors = true;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 25;
  d.descr = "A fanatic cultist of the priest rank, madly gibbering in some "
            "half-lost language.";
  d.spellCastMessage = "The priest makes strange gestures in the air.";
  d.erraticMovement = actorErratic_rare;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::human);
  d.nativeRooms.push_back(RoomThemeId::ritual);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Green Spider";
  d.name_the = "The Green Spider";
  d.id = actor_greenSpider;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.glyph = 's';
  d.color = clrGreenLgt;
  d.tile = TileId::spider;
  d.hp = 2;
  d.dmgMelee = 1;
  d.abilityVals.setVal(AbilityId::melee, 15);
  d.spawnMinDLVL = 1;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "A large green spider.";
  d.erraticMovement = actorErratic_somewhat;
  d.isSpider = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::spider);
  data[d.id] = d;
  d.reset();

  d.name_a = "A White Spider";
  d.name_the = "The White Spider";
  d.id = actor_whiteSpider;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.glyph = 's';
  d.color = clrWhiteHigh;
  d.tile = TileId::spider;
  d.hp = 2;
  d.dmgMelee = 1;
  d.abilityVals.setVal(AbilityId::melee, 15);
  d.spawnMinDLVL = 2;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.nrTurnsAwarePlayer = 5;
  d.actorSize = actorSize_floor;
  d.descr = "A large white spider.";
  d.erraticMovement = actorErratic_somewhat;
  d.isSpider = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::spider);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Red Spider";
  d.name_the = "The Red Spider";
  d.id = actor_redSpider;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.glyph = 's';
  d.color = clrRedLgt;
  d.tile = TileId::spider;
  d.hp = 3;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 25);
  d.spawnMinDLVL = 2;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.nrTurnsAwarePlayer = 5;
  d.actorSize = actorSize_floor;
  d.descr = "A large red spider.";
  d.erraticMovement = actorErratic_somewhat;
  d.isSpider = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::spider);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Shadow Spider";
  d.name_the = "The Shadow Spider";
  d.id = actor_shadowSpider;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.glyph = 's';
  d.color = clrGray;
  d.tile = TileId::spiderLeng;
  d.hp = 8;
  d.dmgMelee = 3;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::stealth, 90);
  d.intrProps[propLightSensitive] = true;
  d.spawnMinDLVL = 6;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL - 1;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.nrTurnsAwarePlayer = 5;
  d.actorSize = actorSize_humanoid;
  d.isSpider = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.descr = "A faint shadow of a huge spider, lurking in my periphery.";
  d.erraticMovement = actorErratic_somewhat;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::spider);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Leng Spider";
  d.name_the = "The Leng Spider";
  d.id = actor_lengSpider;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.rangedCooldownTurns = 0;
  d.glyph = 'S';
  d.color = clrMagenta;
  d.tile = TileId::spiderLeng;
  d.hp = 30;
  d.dmgMelee = 8;
//  d.dmgRanged = 1;
  d.abilityVals.setVal(AbilityId::melee, 40);
//  d.abilityVals.setVal(AbilityId::ranged, 40);
  d.spawnMinDLVL = 10;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeFew;
  d.nrTurnsAwarePlayer = 20;
  d.actorSize = actorSize_giant;
  d.descr = "Leng spiders are huge, purplish arachnids, with pustulent bloated "
            "bodies and long, bristly legs. Native to the Dreamlands, the "
            "spiders of Leng are intelligent, dangerous, and gigantic.";
  d.erraticMovement = actorErratic_somewhat;
  d.isSpider = true;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::spider);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Fire hound";
  d.name_the = "The Fire hound";
  d.id = actor_fireHound;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.rangedCooldownTurns = 6;
  d.glyph = 'd';
  d.color = clrRed;
  d.tile = TileId::hound;
  d.hp = 13;
  d.dmgMelee = 4;
  d.dmgRanged = 4;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 60);
  d.abilityVals.setVal(AbilityId::dodgeAttack, 35);
  d.intrProps[propRFire] = true;
  d.spawnMinDLVL = 9;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_floor;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 25;
  d.descr = "This extremely aggressive canine seems to be part corporeal and "
            "part fire. It breathes searing flames.";
  d.aggroTextMonsterSeen = d.name_the + " snarls at me.";
  d.aggroTextMonsterHidden = "I hear a snarl.";
  d.aggroSfxMonsterSeen = SfxId::dogSnarl;
  d.aggroSfxMonsterHidden = SfxId::dogSnarl;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.isCanine = true;
  d.canBeSummoned = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Frost hound";
  d.name_the = "The Frost hound";
  d.id = actor_frostHound;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.rangedCooldownTurns = 6;
  d.glyph = 'd';
  d.color = clrBlueLgt;
  d.tile = TileId::hound;
  d.hp = 16;
  d.dmgMelee = 6;
  d.dmgRanged = 6;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 60);
  d.abilityVals.setVal(AbilityId::dodgeAttack, 35);
  d.intrProps[propRCold] = true;
  d.spawnMinDLVL = 9;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_floor;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 25;
  d.descr = "This extremely aggressive canine seems to be part corporeal and "
            "part living ice. It breathes frost.";
  d.aggroTextMonsterSeen = d.name_the + " snarls at me.";
  d.aggroTextMonsterHidden = "I hear a snarl.";
  d.aggroSfxMonsterSeen = SfxId::dogSnarl;
  d.aggroSfxMonsterHidden = SfxId::dogSnarl;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.isCanine = true;
  d.canBeSummoned = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  data[d.id] = d;
  d.reset();

  d.name_a = "Zuul the Gatekeeper";
  d.name_the = "Zuul the Gatekeeper";
  d.id = actor_zuul;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.glyph = 'D';
  d.color = clrGray;
  d.tile = TileId::hound;
  d.hp = 65;
  d.spi = 40;
  d.dmgMelee = 8;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.abilityVals.setVal(AbilityId::dodgeAttack, 25);
  d.intrProps[propRFear] = true;
  d.spawnMinDLVL = 13;
  d.spawnMaxDLVL = 999;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 50;
  d.descr = "Zuul the Gatekeeper of Gozer is a demigod and minion of Gozer. It "
            "was worshiped by the Sumerians and Hittites in 6000 BC, along "
            "with Gozer.";
  d.aggroTextMonsterSeen = d.name_the + " snarls at me.";
  d.aggroTextMonsterHidden = "I hear a snarl.";
  d.aggroSfxMonsterSeen = SfxId::dogSnarl;
  d.aggroSfxMonsterHidden = SfxId::dogSnarl;
  d.erraticMovement = actorErratic_never;
  d.monsterShockLevel = MonsterShockLevel::mindShattering;
  d.isCanine = true;
  d.canBeSummoned = false;
  d.isUnique = true;
  d.nrLeftAllowedToSpawn = 1;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::human);
  d.nativeRooms.push_back(RoomThemeId::ritual);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Ghost";
  d.name_the = "The Ghost";
  d.id = actor_ghost;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.glyph = 'G';
  d.color = clrGray;
  d.tile = TileId::ghost;
  d.hp = 4;
  d.spi = 12;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.intrProps[propEthereal] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 3;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "A restless spirit.";
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.isUndead = true;
  d.isGhost = true;
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.deathMessageOverride = "The Ghost is put to rest.";
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::crypt);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Phantasm";
  d.name_the = "The Phantasm";
  d.id = actor_phantasm;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.rangedCooldownTurns = 0;
  d.glyph = 'G';
  d.color = clrWhite;
  d.tile = TileId::phantasm;
  d.hp = 9;
  d.spi = 12;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 45);
  d.intrProps[propEthereal] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 7;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 7;
  d.descr = "It exists between the land of the dead and the living. It "
            "resembles a grim reaper, including the cloak, scythe, and "
            "skeletal appearance.";
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.isUndead = true;
  d.isGhost = true;
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.deathMessageOverride = "The Phantasm is put to rest.";
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::crypt);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Wraith";
  d.name_the = "The Wraith";
  d.id = actor_wraith;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.rangedCooldownTurns = 0;
  d.spellCooldownTurns = 4;
  d.glyph = 'G';
  d.color = clrRed;
  d.tile = TileId::wraith;
  d.hp = 15;
  d.spi = 20;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.intrProps[propEthereal] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 12;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSize_alone;
  d.spellCastMessage = "The Wraith casts a spell.";
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "A powerful spirit.";
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.isUndead = true;
  d.isGhost = true;
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.deathMessageOverride = "The Wraith is put to rest.";
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::crypt);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Rat";
  d.name_the = "The Rat";
  d.id = actor_rat;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::sluggish;
  d.rangedCooldownTurns = 0;
  d.glyph = 'r';
  d.color = clrGray;
  d.tile = TileId::rat;
  d.hp = 2;
  d.spi = 1;
  d.dmgMelee = 1;
  d.abilityVals.setVal(AbilityId::melee, 15);
  d.spawnMinDLVL = 1;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeHorde;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "A large and aggressive rodent.";
  d.erraticMovement = actorErratic_somewhat;
  d.isRat = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::human);
  d.nativeRooms.push_back(RoomThemeId::crypt);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Rat-thing";
  d.name_the = "The Rat-thing";
  d.id = actor_ratThing;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.glyph = 'r';
  d.color = clrBrown;
  d.tile = TileId::ratThing;
  d.hp = 4;
  d.spi = 8;
  d.dmgMelee = 3;
  d.abilityVals.setVal(AbilityId::melee, 25);
  d.abilityVals.setVal(AbilityId::dodgeAttack, 15);
  d.spawnMinDLVL = 2;
  d.spawnMaxDLVL = d.spawnMinDLVL + 15;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeHorde;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "At first sight, a Rat-thing can easily be mistaken for a large, "
            "dark rat. On closer examination, however, their human hands and "
            "evil caricatures of human heads reveal their unnatural nature. "
            "Rat-things are said to be created from dead cultists by foul "
            "witchcraft. Thus, they are found where the witch who created them "
            "had her lair.";
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::unsettling;
  d.isRat = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::human);
  d.nativeRooms.push_back(RoomThemeId::crypt);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Wolf";
  d.name_the = "The Wolf";
  d.id = actor_wolf;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.rangedCooldownTurns = 0;
  d.glyph = 'd';
  d.color = clrGray;
  d.tile = TileId::wolf;
  d.hp = 4;
  d.spi = 2;
  d.dmgMelee = 3;
  d.abilityVals.setVal(AbilityId::melee, 35);
  d.abilityVals.setVal(AbilityId::dodgeAttack, 20);
  d.canSeeInDarkness = true;
  d.spawnMinDLVL = 0;
  d.spawnMaxDLVL = 10;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "A large wolf with eyes full of cunning.";
  d.aggroTextMonsterSeen = d.name_the + " snarls at me.";
  d.aggroTextMonsterHidden = "I hear a chilling howl.";
  d.aggroSfxMonsterSeen = SfxId::dogSnarl;
  d.aggroSfxMonsterHidden = SfxId::wolfHowl;
  d.erraticMovement = actorErratic_somewhat;
  d.isCanine = true;
  d.canBeSummoned = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Giant Bat";
  d.name_the = "The Giant Bat";
  d.id = actor_giantBat;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fastest;
  d.glyph = 'B';
  d.color = clrGray;
  d.tile = TileId::bat;
  d.hp = 8;
  d.spi = 6;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::dodgeAttack, 75);
  d.intrProps[propFlying] = true;
  d.spawnMinDLVL = 4;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "An unknown species, perhaps stemming from some hidden bowels of "
            "the earth. It is about as tall as a full-grown human.";
  d.aggroTextMonsterHidden = "I hear the flapping of great wings.";
  d.aggroSfxMonsterSeen = SfxId::flappingWings;
  d.aggroSfxMonsterHidden = SfxId::flappingWings;
  d.erraticMovement = actorErratic_very;
  d.monsterShockLevel = MonsterShockLevel::unsettling;
  d.canBeSummoned = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Byakhee";
  d.name_the = "The Byakhee";
  d.id = actor_byakhee;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fastest;
  d.glyph = 'B';
  d.color = clrBrownDrk;
  d.tile = TileId::byakhee;
  d.hp = 14;
  d.spi = 20;
  d.dmgMelee = 4;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.abilityVals.setVal(AbilityId::ranged, 40);
  d.abilityVals.setVal(AbilityId::dodgeAttack, 40);
  d.intrProps[propFlying] = true;
  d.spawnMinDLVL = 6;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "\"There flapped rhythmically a horde of tame, trained, hybrid "
            "winged things ... not altogether crows, nor moles, nor buzzards, "
            "nor ants, nor decomposed human beings, but something I cannot and "
            "must not recall.\"-H.P. Lovecraft, \"The Festival\". A Byakhee "
            "appears as a disturbing mixture of creatures composing a humanoid "
            "form. Insect traits vie with predatory birds, digging mammals, "
            "and possibly the necrotic flesh of human victims. At home in "
            "lonely voids of interstellar space, Byakhee are a created race, "
            "though their origin is buried in the distant past.";
  d.aggroTextMonsterHidden = "I hear the flapping of great wings.";
  d.aggroSfxMonsterSeen = SfxId::flappingWings;
  d.aggroSfxMonsterHidden = SfxId::flappingWings;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.canBeSummoned = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Giant Mantis";
  d.name_the = "The Giant Mantis";
  d.id = actor_giantMantis;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fastest;
  d.glyph = 'I';
  d.color = clrGreenLgt;
  d.tile = TileId::mantis;
  d.hp = 15;
  d.spi = 20;
  d.dmgMelee = 5;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.abilityVals.setVal(AbilityId::dodgeAttack, 40);
  d.abilityVals.setVal(AbilityId::stealth, 20);
  d.spawnMinDLVL = 8;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.nrTurnsAwarePlayer = 5;
  d.descr = "A huge predatory insect.";
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::unsettling;
  d.canBeSummoned = false;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Giant Locust";
  d.name_the = "The Giant Locust";
  d.id = actor_locust;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.glyph = 'I';
  d.color = clrBrown;
  d.tile = TileId::locust;
  d.hp = 3;
  d.spi = 2;
  d.dmgMelee = 1;
  d.abilityVals.setVal(AbilityId::melee, 25);
  d.intrProps[propFlying] = true;
  d.spawnMinDLVL = 7;
  d.spawnMaxDLVL = FIRST_CAVERN_LEVEL;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeSwarm;
  d.actorSize = actorSize_floor;
  d.canBashDoors = false;
  d.nrTurnsAwarePlayer = 12;
  d.descr = "A huge swarming insect. They breed rapidly.";
  d.erraticMovement = actorErratic_very;
  d.monsterShockLevel = MonsterShockLevel::none;
  d.canBeSummoned = false;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Fungi from Yuggoth";
  d.name_the = "The Fungi from Yuggoth";
  d.id = actor_miGo;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = false;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::fast;
  d.rangedCooldownTurns = 3;
  d.spellCooldownTurns = 3;
  d.glyph = 'E';
  d.color = clrBrownDrk;
  d.tile = TileId::migo;
  d.hp = 6;
  d.spi = 20;
  d.dmgRanged = 6;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.abilityVals.setVal(AbilityId::ranged, 65);
  d.intrProps[propFlying] = true;
  d.spawnMinDLVL = 6;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.canOpenDoors = true;
  d.nrTurnsAwarePlayer = 25;
  d.descr = "Fungi are more closely related to animals than plants, so it's no "
            "wonder that on some worlds, fungal life evolved to dominate "
            "animal based intelligences. The mi-go, as they are called, come "
            "from such a world. More like crustaceans than any other "
            "terrestrial life form, they find themselves somewhat hampered by "
            "our planet's thicker atmosphere and heavy gravity. They are a "
            "highly scientific race with great aptitude for surgery. Typical "
            "Mi-go have heads like large exposed brains, with many "
            "convolutions on the wrinkled surfaces; six to eight limbs, a "
            "single pair of vast membranous wings, and a long semiprehensile "
            "tail trailing beind. They have visited Earth for centuries to "
            "mine certain minerals not available on their icy world, and more "
            "recently, to study its odd inhabitants. The mi-go are responsible "
            "for many \"alien abduction\" kidnappings. Physically they are not "
            "much more robust than the average human, they rely upon their "
            "superior science to subdue any primitives who stumble upon their "
            "mines and outposts.";
  d.spellCastMessage = "The Fungi makes strange gestures in the air.";
  d.aggroTextMonsterSeen = d.name_the + " speaks at me in a droning voice.";
  d.aggroTextMonsterHidden = "I hear a droning voice.";
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.nativeRooms.push_back(RoomThemeId::plain);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Flying Polyp";
  d.name_the = "The Flying Polyp";
  d.id = actor_flyingPolyp;
  d.canBeSummoned = false;
  d.canBleed = false;
  d.ai[int(AiId::looks)] = false;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.spellCooldownTurns = 3;
  d.glyph = 'E';
  d.color = clrMagenta;
  d.tile = TileId::polyp;
  d.hp = 12;
  d.spi = 20;
  d.dmgMelee = 4;
  d.abilityVals.setVal(AbilityId::melee, 60);
  d.abilityVals.setVal(AbilityId::stealth, 85);
//  d.intrProps[propEthereal] = true; //Does not match well with stealth
  d.intrProps[propRPhys] = true;
  d.intrProps[propRConfusion] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRAcid] = true;
  d.intrProps[propRCold] = true;
  d.intrProps[propRFire] = true;
  d.intrProps[propRPoison] = true;
  d.intrProps[propRSleep] = true;
  d.spawnMinDLVL = 6;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = false;
  d.canOpenDoors = false;
  d.nrTurnsAwarePlayer = 6;
  d.descr = "Flying polyps are a horrible elder race of half polypous, utterly "
            "alien entities. They are only partly material and have the power "
            "of aerial motion, despite the absence of wings. Their senses does "
            "not include sight, but what senses they have can penetrate all "
            "material obstructions. They are invulnerable to normal means of "
            "damage, though they can be destroyed by certain forms of "
            "electrical energy.";
  d.aggroTextMonsterSeen = d.name_the + " makes shrill whistling noises.";
  d.aggroTextMonsterHidden = "I hear a shrill whistling.";
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Ghoul";
  d.name_the = "The Ghoul";
  d.id = actor_ghoul;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.glyph = 'M';
  d.color = clrGreen;
  d.tile = TileId::ghoul;
  d.hp = 21;
  d.spi = 20;
  d.dmgMelee = 4;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.spawnMinDLVL = 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.canOpenDoors = true;
  d.nrTurnsAwarePlayer = 25;
  d.descr = "\"These figures were seldom completely human, but often "
            "approached humanity in varying degrees. Most of the bodies, while "
            "roughly bipedal, had a forward slumping, and a vaguely canine "
            "cast. The texture of the majority was a kind of unpleasant "
            "rubberiness\" -H.P.Lovecraft \"Pickman's Model\". Ghouls are "
            "rubbery, loathsome humanoids with hooflike feet, canine features, "
            "and claws. They are often encrusted with grave mold collected as "
            "they feed.";
  d.aggroTextMonsterSeen = d.name_the + " growls at me.";
  d.aggroTextMonsterHidden = "I hear a chilling howl.";
  d.aggroSfxMonsterSeen = SfxId::ghoulGrowl;
  d.aggroSfxMonsterHidden = SfxId::wolfHowl;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Shadow";
  d.name_the = "The Shadow";
  d.id = actor_shadow;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.glyph = 'M';
  d.color = clrGray;
  d.tile = TileId::shadow;
  d.hp = 4;
  d.spi = 12;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 35);
  d.abilityVals.setVal(AbilityId::stealth, 90);
  d.intrProps[propLightSensitive] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 4;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = false;
  d.canOpenDoors = false;
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.deathMessageOverride = "The shadow fades.";
  d.nrTurnsAwarePlayer = 25;
  d.descr = "A living shadow";
  d.isAutoDescrAllowed = false;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.nativeRooms.push_back(RoomThemeId::monster);
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Mummy";
  d.name_the = "The Mummy";
  d.id = actor_mummy;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.spellCooldownTurns = 3;
  d.glyph = 'P';
  d.color = clrMagenta;
  d.tile = TileId::mummy;
  d.hp = 25;
  d.spi = 30;
  d.dmgMelee = 6;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.spawnMinDLVL = 7;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.canOpenDoors = true;
  d.nrTurnsAwarePlayer = 9999;
  d.descr = "A mummified human being, possibly dating back millennia.";
  d.spellCastMessage = "The mummy casts a spell.";
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.isUndead = true;
  d.isHumanoid = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "Khephren";
  d.name_the = "Khephren";
  d.id = actor_khephren;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.spellCooldownTurns = 3;
  d.isUnique = true;
  d.nrLeftAllowedToSpawn = 0;
  d.glyph = 'P';
  d.color = clrRed;
  d.tile = TileId::mummy;
  d.hp = 70;
  d.spi = 60;
  d.dmgMelee = 6;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.spawnMinDLVL = FIRST_CAVERN_LEVEL - 1;
  d.isAutoSpawnAllowed = false;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.canOpenDoors = true;
  d.nrTurnsAwarePlayer = 9999;
  d.descr = "The mummified fourth dynasty Egyptian pharaoh Khephren. How he "
            "came to dwell here is beyond my guess. His name means "
            "\"Rise, Ra!\"";
  d.spellCastMessage = "Khephren casts a spell.";
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.isUndead = true;
  d.isHumanoid = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "Nitokris";
  d.name_the = "Nitokris";
  d.id = actor_nitokris;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.spellCooldownTurns = 3;
  d.isUnique = true;
  d.nrLeftAllowedToSpawn = 1;
  d.glyph = 'P';
  d.color = clrRedLgt;
  d.tile = TileId::mummy;
  d.hp = 70;
  d.spi = 60;
  d.dmgMelee = 6;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.spawnMinDLVL = 11;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.canBashDoors = true;
  d.canOpenDoors = true;
  d.nrTurnsAwarePlayer = 9999;
  d.descr = "The mummified sixth dynasty Egyptian pharaoh Nitokris. How she "
            "came to dwell here is beyond my guess. Her name is found in the "
            "histories of Herodotus and writings of Manetho. According to the "
            "writings of the former, she took the throne by inviting her "
            "brothers murderers to a banquet. Then killed them by flooding the "
            "sealed room with the Nile.";
  d.spellCastMessage = "Nitokris casts a spell.";
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::terrifying;
  d.isUndead = true;
  d.isHumanoid = true;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Deep One";
  d.name_the = "The Deep One";
  d.id = actor_deepOne;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = true;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 15;
  d.glyph = 'F';
  d.color = clrWhite;
  d.tile = TileId::deepOne;
  d.hp = 10;
  d.spi = 12;
  d.dmgMelee = 5;
  d.dmgRanged = 5;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.abilityVals.setVal(AbilityId::ranged, 40);
  d.spawnMinDLVL = 6;
  d.groupSize = monsterGroupSizeHorde;
  d.actorSize = actorSize_humanoid;
  d.isHumanoid = true;
  d.canBashDoors = true;
  d.canOpenDoors = true;
  d.nrTurnsAwarePlayer = 20;
  d.descr = "Deep ones are misbegotten creatures of the deep. A deep one "
            "appears as an abominable crossbreed of a human and amphibian. Its "
            "fins are merged with twisted arms and legs; its bent back is "
            "crowned with a long, spiny frill. They can breathe both air and "
            "water. In the timeless depths of the sea, the deep one's alien, "
            "arrogant lives are coldly beautiful, unbelievably cruel, and "
            "effectively immortal. Deep ones may be worshipped by humans with "
            "whom they regularly interbreed.";
  d.erraticMovement = actorErratic_rare;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.nativeRooms.push_back(RoomThemeId::flooded);
  d.nativeRooms.push_back(RoomThemeId::muddy);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Mass of Worms";
  d.name_the = "The Mass of Worms";
  d.id = actor_wormMass;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::slow;
  d.rangedCooldownTurns = 0;
  d.glyph = 'w';
  d.color = clrWhite;
  d.tile = TileId::massOfWorms;
  d.hp = 3;
  d.spi = 1;
  d.dmgMelee = 2;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.spawnMinDLVL = 3;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 10;
  d.descr = "A slithering conglomeration of carnivorous worms. They multiply "
            "rapidly.";
  d.isAutoDescrAllowed = false;
  d.erraticMovement = actorErratic_very;
  d.canBleed = false;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::monster);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Dust Vortex";
  d.name_the = "The Dust Vortex";
  d.id = actor_dustVortex;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::normal;
  d.rangedCooldownTurns = 0;
  d.glyph = 'V';
  d.color = clrGray;
  d.tile = TileId::vortex;
  d.hp = 10;
  d.spi = 12;
  d.dmgMelee = 4;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.intrProps[propFlying] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 8;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 5;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = true;
  d.descr = "A spinning force of destruction. It seems to move with some "
            "manner of purpose.";
  d.aggroTextMonsterHidden = "I hear a howling wind.";
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.erraticMovement = actorErratic_very;
  d.monsterShockLevel = MonsterShockLevel::unsettling;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Fire Vortex";
  d.name_the = "The Fire Vortex";
  d.id = actor_fireVortex;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::normal ;
  d.rangedCooldownTurns = 0;
  d.glyph = 'V';
  d.color = clrRed;
  d.tile = TileId::vortex;
  d.hp = 16;
  d.spi = 12;
  d.dmgMelee = 6;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.intrProps[propFlying] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.intrProps[propRFire] = true;
  d.spawnMinDLVL = 13;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 5;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = true;
  d.descr = "A spinning force of fire and destruction. It seems to move with "
            "some manner of purpose.";
  d.aggroTextMonsterHidden = "I hear a howling wind.";
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.erraticMovement = actorErratic_very;
  d.monsterShockLevel = MonsterShockLevel::unsettling;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Frost Vortex";
  d.name_the = "The Frost Vortex";
  d.id = actor_frostVortex;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::normal ;
  d.rangedCooldownTurns = 0;
  d.glyph = 'V';
  d.color = clrBlueLgt;
  d.tile = TileId::vortex;
  d.hp = 16;
  d.spi = 12;
  d.dmgMelee = 6;
  d.abilityVals.setVal(AbilityId::melee, 40);
  d.intrProps[propFlying] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.intrProps[propRCold] = true;
  d.spawnMinDLVL = 13;
  d.groupSize = monsterGroupSizeFew;
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 5;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = true;
  d.descr = "A spinning force of ice and destruction. It seems to move with "
            "some manner of purpose.";
  d.aggroTextMonsterHidden = "I hear a howling wind.";
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.erraticMovement = actorErratic_very;
  d.monsterShockLevel = MonsterShockLevel::unsettling;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Black Ooze";
  d.name_the = "The Black Ooze";
  d.id = actor_oozeBlack;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::sluggish;
  d.rangedCooldownTurns = 0;
  d.glyph = 'o';
  d.color = clrGray;
  d.tile = TileId::ooze;
  d.hp = 12;
  d.spi = 12;
  d.dmgMelee = 3;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.intrProps[propOoze] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 3;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 250;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = false;
  d.descr = "It's just a mass of gunk, but it seems sentient.";
  d.deathMessageOverride = "The Ooze disintegrates.";
  d.aggroTextMonsterSeen = d.name_the + " makes a gurgling noise.";
  d.aggroTextMonsterHidden = "I hear a gurgling noise.";
  d.aggroSfxMonsterSeen = SfxId::oozeGurgle;
  d.aggroSfxMonsterHidden = SfxId::oozeGurgle;
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::unsettling;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::flooded);
  d.nativeRooms.push_back(RoomThemeId::muddy);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Clear Ooze";
  d.name_the = "The Clear Ooze";
  d.id = actor_oozeClear;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::sluggish;
  d.rangedCooldownTurns = 0;
  d.glyph = 'o';
  d.color = clrWhiteHigh;
  d.tile = TileId::ooze;
  d.hp = 8;
  d.spi = 12;
  d.dmgMelee = 3;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.abilityVals.setVal(AbilityId::stealth, 90);
  d.intrProps[propOoze] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 4;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 250;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = false;
  d.descr = "It's a clear mass of gunk. They can be hard to spot.";
  d.deathMessageOverride = "The Ooze disintegrates.";
  d.aggroTextMonsterSeen = d.name_the + " makes a gurgling noise.";
  d.aggroTextMonsterHidden = "I hear a gurgling noise.";
  d.aggroSfxMonsterSeen = SfxId::oozeGurgle;
  d.aggroSfxMonsterHidden = SfxId::oozeGurgle;
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.erraticMovement = actorErratic_somewhat;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::flooded);
  d.nativeRooms.push_back(RoomThemeId::muddy);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Putrid Ooze";
  d.name_the = "The Putrid Ooze";
  d.id = actor_oozePutrid;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::sluggish;
  d.rangedCooldownTurns = 0;
  d.glyph = 'o';
  d.color = clrGreen;
  d.tile = TileId::ooze;
  d.hp = 14;
  d.spi = 12;
  d.dmgMelee = 5;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.intrProps[propOoze] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 5;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 250;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = false;
  d.descr = "It's just a mass of gunk, but it seems sentient. It stinks like "
            "rotting cadavers.";
  d.deathMessageOverride = "The Ooze disintegrates.";
  d.aggroTextMonsterSeen = d.name_the + " makes a gurgling noise.";
  d.aggroTextMonsterHidden = "I hear a gurgling noise.";
  d.aggroSfxMonsterSeen = SfxId::oozeGurgle;
  d.aggroSfxMonsterHidden = SfxId::oozeGurgle;
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::flooded);
  d.nativeRooms.push_back(RoomThemeId::muddy);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Poison Ooze";
  d.name_the = "The Poison Ooze";
  d.id = actor_oozePoison;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::sluggish;
  d.rangedCooldownTurns = 0;
  d.glyph = 'o';
  d.color = clrGreenLgt;
  d.tile = TileId::ooze;
  d.hp = 16;
  d.spi = 12;
  d.dmgMelee = 7;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.intrProps[propOoze] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 9;
  d.spawnMaxDLVL = d.spawnMinDLVL + 5;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSizeGroup;
  d.actorSize = actorSize_floor;
  d.nrTurnsAwarePlayer = 250;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = false;
  d.descr = "It's just a mass of gunk, but it seems sentient. It drips and "
            "sizzles with poison.";
  d.deathMessageOverride = "The Ooze disintegrates.";
  d.aggroTextMonsterSeen = d.name_the + " makes a gurgling noise.";
  d.aggroTextMonsterHidden = "I hear a gurgling noise.";
  d.aggroSfxMonsterSeen = SfxId::oozeGurgle;
  d.aggroSfxMonsterHidden = SfxId::oozeGurgle;
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.erraticMovement = actorErratic_somewhat;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::flooded);
  d.nativeRooms.push_back(RoomThemeId::muddy);
//  d.nativeRooms.push_back(RoomThemeId::chasm);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Colour out of space";
  d.name_the = "The Colour out of space";
  d.id = actor_colourOOSpace;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = true;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = false;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = true;
  d.speed = ActorSpeed::sluggish;
  d.rangedCooldownTurns = 0;
  d.glyph = 'O';
  d.color = clrGreenLgt;
  d.tile = TileId::ooze;
  d.hp = 70;
  d.spi = 40;
  d.dmgMelee = 10;
  d.abilityVals.setVal(AbilityId::melee, 50);
  d.intrProps[propOoze] = true;
  d.intrProps[propRFear] = true;
  d.intrProps[propRConfusion] = true;
  d.spawnMinDLVL = 14;
  d.spawnMaxDLVL = 999;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 250;
  d.canOpenDoors = false;
  d.canBashDoors = false;
  d.descr = "A very peculiar floating speck of strange and shifting colours. "
            "It is hard to tell what colour it is exactly.";
  d.isAutoDescrAllowed = false;
  d.deathMessageOverride = "The Colour disintegrates.";
  d.canBeSummoned = true;
  d.canBleed = false;
  d.canLeaveCorpse = false;
  d.erraticMovement = actorErratic_very;
  d.monsterShockLevel = MonsterShockLevel::scary;
  d.nativeRooms.push_back(RoomThemeId::plain);
  d.nativeRooms.push_back(RoomThemeId::flooded);
  d.nativeRooms.push_back(RoomThemeId::muddy);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Chthonian";
  d.name_the = "The Chthonian";
  d.id = actor_chthonian;
  d.ai[int(AiId::looks)] = false;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::sluggish;
  d.glyph = 'W';
  d.color = clrBrownDrk;
  d.tile = TileId::chthonian;
  d.hp = 200;
  d.spi = 40;
  d.dmgMelee = 10;
  d.abilityVals.setVal(AbilityId::melee, 45);
  d.intrProps[propBurrowing] = true;
  d.intrProps[propRFear] = true;
  d.spawnMinDLVL = 12;
  d.spawnMaxDLVL = 999;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 5;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = false;
  d.descr = "It resembles an immense squid, with reaching, groping tentacles, "
            "and a pulpy, elongated sack of a body. Chthonians are powerful "
            "burrowers, and live for more than a thousand years.";
  d.aggroTextMonsterSeen = "";
  d.aggroTextMonsterHidden = "";
  d.aggroSfxMonsterSeen = SfxId::endOfSfxId;
  d.aggroSfxMonsterHidden = SfxId::endOfSfxId;
  d.canBleed = true;
  d.canBeSummoned = false;
  d.monsterShockLevel = MonsterShockLevel::mindShattering;
  d.erraticMovement = actorErratic_somewhat;
  d.nativeRooms.push_back(RoomThemeId::plain);
  data[d.id] = d;
  d.reset();

  d.name_a = "A Hunting Horror";
  d.name_the = "The Hunting Horror";
  d.id = actor_huntingHorror;
  d.ai[int(AiId::looks)] = true;
  d.ai[int(AiId::makesRoomForFriend)] = false;
  d.ai[int(AiId::attacks)] = true;
  d.ai[int(AiId::pathsToTargetWhenAware)] = true;
  d.ai[int(AiId::movesTowardTargetWhenVision)] = true;
  d.ai[int(AiId::movesTowardLair)] = false;
  d.ai[int(AiId::movesTowardLeader)] = false;
  d.speed = ActorSpeed::fastest;
  d.rangedCooldownTurns = 0;
  d.glyph = 'W';
  d.color = clrGray;
  d.tile = TileId::huntingHorror;
  d.hp = 60;
  d.spi = 40;
  d.dmgMelee = 10;
  d.abilityVals.setVal(AbilityId::melee, 60);
  d.intrProps[propFlying] = true;
  d.intrProps[propRFear] = true;
  d.spawnMinDLVL = LAST_CAVERN_LEVEL - 1;
  d.spawnMaxDLVL = 999;
  d.canSeeInDarkness = true;
  d.groupSize = monsterGroupSize_alone;
  d.actorSize = actorSize_humanoid;
  d.nrTurnsAwarePlayer = 2;
  d.isAutoDescrAllowed = true;
  d.canOpenDoors = false;
  d.canBashDoors = true;
  d.descr = "It resembles an enormous black ropy worm, like a legless dragon "
            "seen in a nightmare. A great gaping maw filled with jagged, "
            "irregular teeth gapes open hungrily as it flies in search of "
            "prey. Hunting horrors haunt the dark places of the universe, from "
            "which they are called up at the whim of their lord Nyarlathotep.";
  d.aggroTextMonsterHidden = "I hear the flapping of great wings.";
  d.aggroSfxMonsterSeen = SfxId::flappingWings;
  d.aggroSfxMonsterHidden = SfxId::flappingWings;
  d.canBleed = true;
  d.canBeSummoned = false;
  d.monsterShockLevel = MonsterShockLevel::mindShattering;
  d.erraticMovement = actorErratic_somewhat;
  data[d.id] = d;
  d.reset();
}

} //namespace

void init() {initDataList();}

void storeToSaveLines(vector<string>& lines) {
  for(int i = 1; i < endOfActorIds; i++) {
    lines.push_back(toStr(data[i].nrLeftAllowedToSpawn));
    lines.push_back(toStr(data[i].nrKills));
  }
}

void setupFromSaveLines(vector<string>& lines) {
  for(int i = 1; i < endOfActorIds; i++) {
    ActorDataT& d = data[i];
    const int NR_ALLOWED_TO_SPAWN = toInt(lines.front());
    lines.erase(lines.begin());
    const int NR_KILLS = toInt(lines.front());
    lines.erase(lines.begin());
    d.nrLeftAllowedToSpawn = NR_ALLOWED_TO_SPAWN;
    d.nrKills = NR_KILLS;
  }
}

} //ActorData
